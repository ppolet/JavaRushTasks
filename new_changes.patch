Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2201/TooShortStringFirstThreadException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2201/TooShortStringFirstThreadException.java	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2201/TooShortStringFirstThreadException.java	(revision )
@@ -0,0 +1,4 @@
+package com.javarush.task.task22.task2201;
+
+public class TooShortStringFirstThreadException extends RuntimeException {
+}
Index: out/production/3.JavaMultithreading/com/javarush/task/task21/task2107/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task21/task2107/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task21/task2107/Условие.jrtc	(revision )
@@ -0,0 +1,16 @@
+taskKey="com.javarush.task.task21.task2107"
+
+Глубокое клонирование карты
+
+Обеспечь возможность клонирования объекта класса Solution используя глубокое клонирование.
+Данные в карте users также должны быть клонированы.
+Не забудь о методах equals и hashCode для корректного добавления элементов типа User в HashMap.
+
+
+Требования:
+1.	Класс Solution должен поддерживать интерфейс Cloneable.
+2.	Класс User должен поддерживать интерфейс Cloneable.
+3.	В классе User должен быть корректно реализован метод clone.
+4.	В классе Solution должен быть корректно реализован метод clone.
+
+
Index: 4.JavaCollections/src/com/javarush/task/task34/task3404/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 4.JavaCollections/src/com/javarush/task/task34/task3404/Условие.jrtc	(revision )
+++ 4.JavaCollections/src/com/javarush/task/task34/task3404/Условие.jrtc	(revision )
@@ -0,0 +1,25 @@
+taskKey="com.javarush.task.task34.task3404"
+
+Рекурсия для мат. выражения
+
+На вход подается строка - математическое выражение.
+Выражение включает целые и дробные числа, скобки (), пробелы, знак отрицания -, возведение в степень ^, sin(x), cos(x), tan(x)
+Для sin(x), cos(x), tan(x) выражение внутри скобок считать градусами, например, cos(3 + 19*3)=0.5
+Степень задается так: a^(1+3) и так a^4, что эквивалентно a*a*a*a.
+С помощью рекурсии вычислить выражение и количество математических операций. Вывести через пробел результат в консоль.
+Результат выводить с точностью до двух знаков, для 0.33333 вывести 0.33, использовать стандартный принцип округления.
+Не создавай в классе Solution дополнительные поля.
+Не пиши косвенную рекурсию.
+Пример, состоящий из операций sin * - + * +:
+sin(2*(-5+1.5*4)+28)
+Результат:
+0.5 6
+
+
+Требования:
+1.	В классе Solution не должны быть созданы дополнительные поля.
+2.	Метод recursion должен выводить на экран результат вычисления заданного выражения (пример в условии).
+3.	Метод recursion не должен быть статическим.
+4.	Метод recursion должен быть рекурсивным.
+
+
Index: 4.JavaCollections/src/com/javarush/task/task34/task3404/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 4.JavaCollections/src/com/javarush/task/task34/task3404/Solution.java	(revision )
+++ 4.JavaCollections/src/com/javarush/task/task34/task3404/Solution.java	(revision )
@@ -0,0 +1,19 @@
+package com.javarush.task.task34.task3404;
+
+/* 
+Рекурсия для мат. выражения
+*/
+public class Solution {
+    public static void main(String[] args) {
+        Solution solution = new Solution();
+        solution.recursion("sin(2*(-5+1.5*4)+28)", 0); //expected output 0.5 6
+    }
+
+    public void recursion(final String expression, int countOperation) {
+        //implement
+    }
+
+    public Solution() {
+        //don't delete
+    }
+}
Index: out/production/3.JavaMultithreading/com/javarush/task/task21/task2110/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task21/task2110/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task21/task2110/Условие.jrtc	(revision )
@@ -0,0 +1,14 @@
+taskKey="com.javarush.task.task21.task2110"
+
+Рефакторинг методов
+
+Отрефакторите метод writeZipEntriesToFile в соответствии с java7 try-with-resources.
+
+
+Требования:
+1.	Метод writeZipEntriesToFile должен быть объявлен с модификатором доступа public.
+2.	Метод writeZipEntriesToFile должен быть статическим.
+3.	Тип возвращаемого значения метода writeZipEntriesToFile должен быть void.
+4.	Метод writeZipEntriesToFile должен корректно использовать try-with-resources. В программе не должно быть закомментированного кода.
+
+
Index: 2.JavaCore/src/com/javarush/task/task17/task1721/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 2.JavaCore/src/com/javarush/task/task17/task1721/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 2.JavaCore/src/com/javarush/task/task17/task1721/Solution.java	(revision )
@@ -1,62 +1,46 @@
 package com.javarush.task.task17.task1721;
 
+import java.io.BufferedReader;
+import java.io.FileReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
 import java.util.ArrayList;
 import java.util.List;
-import java.io.*;
 
 /* 
 Транзакционность
+Сделать метод joinData транзакционным, т.е. если произошел сбой, то данные не должны быть изменены.
+1. Считать с консоли 2 имени файла
+2. Считать построчно данные из файлов. Из первого файла — в allLines, из второго — в forRemoveLines
+В методе joinData:
+3. Если список allLines содержит все строки из forRemoveLines, то удалить из списка allLines все строки, которые есть в forRemoveLines
+4. Если условие из п.3 не выполнено, то:
+4.1. очистить allLines от данных
+4.2. выбросить исключение CorruptedDataException
+Метод joinData должен вызываться в main. Все исключения обработайте в методе main.
+Не забудь закрыть потоки.
 */
 
 public class Solution {
     public static List<String> allLines = new ArrayList<String>();
     public static List<String> forRemoveLines = new ArrayList<String>();
 
-    public static void main(String[] args) throws IOException
-    {
+    public static void main(String[] args) throws IOException {
+
         BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
         String fileOne = reader.readLine();
         String fileTwo = reader.readLine();
 
-        writeInList(fileOne,allLines);
-        writeInList(fileTwo, forRemoveLines);
-    }
+        BufferedReader in = new BufferedReader(new FileReader(fileOne));
+        while (in.ready())
+        {
+            allLines.add(in.readLine());
+        }
 
 
+    }
 
     public void joinData () throws CorruptedDataException {
 
-        if (allLines.containsAll(forRemoveLines) ) {
-            allLines.removeAll(forRemoveLines)  ;
-            return;
-        }
-
-        for (String s : forRemoveLines) {
-            if (!allLines.contains(s)){
-                allLines.clear();
-                throw  new CorruptedDataException();
-            }
-
-        }
     }
-
-    public static void writeInList(String file, List<String> list) throws FileNotFoundException
-    {
-        BufferedReader in = new BufferedReader(new FileReader(file));
-        try{
-            String s;
-            while((s = in.readLine()) != null){
-                String[] strings = s.split(" ");
-
-                for (String x : strings){
-                    list.add(x);
-
-                }
-            }
-        }catch (Exception e){
-
-        }
-
-
-    }
-}
\ No newline at end of file
+}
Index: 3.JavaMultithreading/src/com/javarush/task/task21/task2113/Hippodrome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task21/task2113/Hippodrome.java	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task21/task2113/Hippodrome.java	(revision )
@@ -0,0 +1,162 @@
+package com.javarush.task.task21.task2113;
+
+import java.util.ArrayList;
+import java.util.List;
+
+
+
+/**
+ Ипподром(16)
+ Теперь уже точно все.
+
+ Добавь вызов метода printWinner в конец метода main.
+
+ Запускай и любуйся своей первой компьютерной игрой :)
+
+
+ Требования:
+ 1. Метод printWinner должен быть вызван в методе main после метода run.
+ Ипподром(15)
+ Добавим определение победителя.
+ В классе Hippodrome сделаем два метода:
+ public Horse getWinner() и public void printWinner()
+
+ Метод getWinner должен возвращать лошадь пробежавшую самую большую дистанцию.
+ Метод printWinner выводит на экран имя победителя в виде: Winner is <name>!
+
+ Пример:
+ Winner is Lucky!
+
+ Ипподром(14)
+ Запускаем и любуемся.
+ У нас каждые полсекунды отображается новый кадр с ситуацией на ипподроме.
+ Мышкой уменьши размер консоли так, чтобы был виден только один «кадр» и на том же самом месте.
+
+ Тогда можно наблюдать забег в живую и даже покомментировать:
+ — Старт.
+ — Гомер неожиданно обходит Лаки.
+ — Слевин вырывается вперед.
+ — Вперед Лаки!
+ — 10 баксов на Слевина.
+ — Похоже Лаки сбросил жокея и расслабился.
+ — Гомер уверенно вырывается вперед.
+ — Неожиданно для всех побеждает Гомер. Вот это номер!
+
+ Ипподром(13)
+ Теперь вернемся к методу print класса Horse.
+
+ Т.к. мы работаем с консолью, то все лошади на бегах будут выглядеть примерно так:
+ ........Sleven <- лошадь Слевин
+ ....Lucky <- лошадь Лаки
+ ..........Gomer <- лошадь Гомер
+
+ Другими словами, в методе print надо вывести на экран строку состоящую из точек и имени лошади.
+ Количество точек равно distance, округленному (в меньшую сторону) до целого числа.
+
+ Ипподром(12)
+ Осталось совсем немного — дописать класс Horse.
+ Каждый ход у лошади будет вызываться метод move.
+ Когда у лошади вызывают метод move, лошадь должна пробежать некоторую дистанцию.
+ Дистанция зависит от скорости лошади (speed). В самом простом варианте, выглядеть этот метод должен примерно так:
+ distance += speed;
+
+ Но, чтобы было интереснее, давай сделаем так, чтобы скорость все время немного менялась.
+ Для этого умножь speed на случайное число.
+ Случайное число можно получить с помощью метода Math.random().
+
+ Ипподром(11)
+ С классом Hippodrome почти закончили.
+ Добавь в конец метода main вызов run().
+
+ Подсказка:
+ run() — это нестатический метод, поэтому вызвать его можно только у объекта.
+ А где взять объект?
+
+ Подсказка 2:
+ */
+public class Hippodrome {
+
+    static Hippodrome game;
+    private List<Horse> horses;
+
+    public void move() {
+
+        for (Horse horse : horses) {
+            horse.move();
+        }
+    }
+
+    public void print() {
+
+        for (Horse horse : horses) {
+            horse.print();
+        }
+
+        for (int i = 0; i < 10; i++) {
+
+            System.out.println();
+        }
+    }
+
+    public void run() throws InterruptedException {
+
+        for (int i = 0; i < 100; i++) {
+            move();
+            print();
+            Thread.sleep(200);
+        }
+
+    }
+
+    public Horse getWinner() {
+        Horse winnerHorse = null;
+        for (Horse horse : horses) {
+            if (winnerHorse == null)
+                winnerHorse = horse;
+            else if (winnerHorse.getDistance() < horse.getDistance())
+                winnerHorse = horse;
+
+        }
+        return winnerHorse;
+
+    }
+
+    public void printWinner() {
+        System.out.println("Winner is " + getWinner().getName() + "!");
+
+    }
+
+    public List<Horse> getHorses() {
+        return horses;
+    }
+
+    public Hippodrome(List<Horse> horses) {
+        this.horses = horses;
+    }
+
+
+    public static void main(String[] args) throws InterruptedException {
+
+
+        Horse horse1 = new Horse("horse1", 3, 0);
+        Horse horse2 = new Horse("horse2", 3, 0);
+        Horse horse3 = new Horse("horse3", 3, 0);
+        List<Horse> horses = new ArrayList<>();
+        horses.add(horse1);
+        horses.add(horse2);
+        horses.add(horse3);
+        game = new Hippodrome(horses);
+        game.getHorses();
+        try {
+            game.run();
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+
+        game.printWinner();
+
+
+    }
+
+
+}
Index: out/production/3.JavaMultithreading/com/javarush/task/task21/task2111/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task21/task2111/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task21/task2111/Условие.jrtc	(revision )
@@ -0,0 +1,15 @@
+taskKey="com.javarush.task.task21.task2111"
+
+Освобождаем ресурсы
+
+Реализуй метод finalize, предварительно обдумав, что именно в нем должно быть.
+Проведи рефакторинг метода getUsers в соответствии с java7 try-with-resources.
+
+
+Требования:
+1.	Метод finalize в классе Solution должен содержать вызов super.finalize().
+2.	Метод finalize в классе Solution должен корректно завершаться в случае, если значение поля connection равно null.
+3.	Метод finalize в классе Solution должен закрывать текущее соединение, если значение поля connection не равно null.
+4.	Метод getUsers должен корректно использовать try-with-resources.
+
+
Index: 2.JavaCore/src/com/javarush/task/task15/task1507/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 2.JavaCore/src/com/javarush/task/task15/task1507/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 2.JavaCore/src/com/javarush/task/task15/task1507/Solution.java	(revision )
@@ -22,4 +22,44 @@
             System.out.println();
         }
     }
+
+
+    public static void printMatrix(int m, double n, Integer value)
+    {
+        printMatrix(m, n, value);
+    }
+
+    public static void printMatrix(short m, int n, Integer value)
+    {
+        printMatrix(m, n, value);
+    }
+    public static void printMatrix(float m, double n, Integer value)
+    {
+        printMatrix(m, n, value);
+    }
+
+    public static void printMatrix(short m, short n, Integer value)
+    {
+        printMatrix(m, n, value);
+    }
+
+    public static void printMatrix(float m, double n, String value)
+    {
+        printMatrix(m, n, value);
+    }
+
+    public static void printMatrix(short m, short n, String value)
+    {
+        printMatrix(m, n, value);
+    }
+
+    public static void printMatrix(float m, double n, Double value)
+    {
+        printMatrix(m, n, value);
+    }
+
+    public static void printMatrix(short m, short n, Float value)
+    {
+        printMatrix(m, n, value);
+    }
 }
Index: 2.JavaCore/src/com/javarush/task/task17/task1710/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 2.JavaCore/src/com/javarush/task/task17/task1710/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 2.JavaCore/src/com/javarush/task/task17/task1710/Solution.java	(revision )
@@ -1,8 +1,12 @@
 package com.javarush.task.task17.task1710;
 
+import java.io.IOException;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 
 /* 
 CRUD
@@ -10,13 +14,85 @@
 
 public class Solution {
     public static List<Person> allPeople = new ArrayList<Person>();
-
     static {
         allPeople.add(Person.createMale("Иванов Иван", new Date()));  //сегодня родился    id=0
         allPeople.add(Person.createMale("Петров Петр", new Date()));  //сегодня родился    id=1
     }
 
-    public static void main(String[] args) {
+    public static void main(String[] args) throws IOException, ParseException
+    {
         //start here - начни тут
-    }
-}
+        String command = args[0];
+        String inputString = "";
+        for (int i = 1; i<args.length; i++) {
+            inputString += args[i] + " ";
+        }
+        String[] inputParam = inputString.split(" ");
+
+        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
+        switch (command) {
+            case "-c":{
+                String name="";
+                int count = 0;
+                for (int i = 0; i<inputParam.length; i++) {
+                    if (!inputParam[i].equals("м")&&!inputParam[i].equals("ж")) {name+=inputParam[i]+" "; count++;} else break; }
+                name = name.substring(0, name.length()-1);
+
+                String sex = inputParam[count];
+                Date birthdate = simpleDateFormat.parse(inputParam[count+1]);
+                if (sex.equals("м")) {
+                    allPeople.add(Person.createMale(name, birthdate));
+                }
+                else if (sex.equals("ж")) {
+                    allPeople.add(Person.createFemale(name, birthdate));
+                }
+            }
+            System.out.println(allPeople.size()-1);
+            break;
+
+            case "-u": { //-u id name sex bd
+                int id = Integer.parseInt(inputParam[0]);
+                String name="";
+                int count = 1;
+                for (int i = 1; i<inputParam.length; i++) {
+                    if (!inputParam[i].equals("м")&&!inputParam[i].equals("ж")) {name+=inputParam[i]+" "; count++;} else break; }
+                name = name.substring(0, name.length()-1);
+
+                String sex = inputParam[count];
+                Date birthdate = simpleDateFormat.parse(inputParam[count+1]);
+
+                if (sex.equals("м")) {
+                    Person p = allPeople.get(id);
+                    p.setName(name);
+                    p.setSex(Sex.MALE);
+                    p.setBirthDay(birthdate);
+                }
+                else if (sex.equals("ж")) {
+                    Person p = allPeople.get(id);
+                    p.setName(name);
+                    p.setSex(Sex.FEMALE);
+                    p.setBirthDay(birthdate);
+                }
+            } break;
+            case "-d": {
+                Person p = allPeople.get(Integer.parseInt(inputParam[0]));
+                p.setBirthDay(null);
+                p.setName(null);
+                p.setSex(null);
+            } break;
+            case "-i": { //id: name sex (м/ж) bd (формат 15-Apr-1990)
+                int id = Integer.parseInt(inputParam[0]);
+                SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy", Locale.ENGLISH);
+                Person p = allPeople.get(id);
+                String sex;
+                if (p.getSex()==Sex.MALE) {
+                    sex = "м";
+                }
+                else sex = "ж";
+                System.out.println(p.getName() + " " + sex + " " + sdf.format(p.getBirthDay()));
+
+            } break;
+        }
+
+    }
+}
\ No newline at end of file
Index: out/production/3.JavaMultithreading/com/javarush/task/task21/task2103/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task21/task2103/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task21/task2103/Условие.jrtc	(revision )
@@ -0,0 +1,14 @@
+taskKey="com.javarush.task.task21.task2103"
+
+Все гениальное - просто!
+
+Упростить. Переменные не переименовывать, комментарии не оставлять.
+
+
+Требования:
+1.	Метод calculate должен быть статическим.
+2.	Метод calculate должен возвращать значение типа boolean.
+3.	Метод calculate должен принимать четыре параметра типа boolean.
+4.	Метод calculate должен быть максимально упрощен(поведение должно остаться прежним).
+
+
Index: 1.JavaSyntax/src/com/javarush/task/task08/task0829/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 1.JavaSyntax/src/com/javarush/task/task08/task0829/Solution.java	(revision )
+++ 1.JavaSyntax/src/com/javarush/task/task08/task0829/Solution.java	(revision )
@@ -0,0 +1,34 @@
+package com.javarush.task.task08.task0829;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.util.ArrayList;
+import java.util.List;
+
+/* 
+Модернизация ПО
+*/
+
+public class Solution {
+    public static void main(String[] args) throws IOException {
+        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
+
+        //list of addresses
+        List<String> addresses = new ArrayList<String>();
+        while (true) {
+            String family = reader.readLine();
+            if (family.isEmpty()) break;
+
+            addresses.add(family);
+        }
+
+        //read home number
+        int houseNumber = Integer.parseInt(reader.readLine());
+
+        if (0 <= houseNumber && houseNumber < addresses.size()) {
+            String familySecondName = addresses.get(houseNumber);
+            System.out.println(familySecondName);
+        }
+    }
+}
Index: 1.JavaSyntax/src/com/javarush/task/task04/task0424/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 1.JavaSyntax/src/com/javarush/task/task04/task0424/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 1.JavaSyntax/src/com/javarush/task/task04/task0424/Solution.java	(revision )
@@ -8,10 +8,6 @@
 
 public class Solution {
     public static void main(String[] args) throws Exception {
-        int a,b,c;
-        Scanner scan= new Scanner(System.in);
-        a=scan.nextInt();
-        b=scan.nextInt();
-        c=scan.nextInt();//напишите тут ваш код
+        //напишите тут ваш код
     }
 }
Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2201/TooShortStringSecondThreadException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2201/TooShortStringSecondThreadException.java	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2201/TooShortStringSecondThreadException.java	(revision )
@@ -0,0 +1,4 @@
+package com.javarush.task.task22.task2201;
+
+public class TooShortStringSecondThreadException extends RuntimeException {
+}
Index: 4.JavaCollections/src/com/javarush/task/task34/task3411/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 4.JavaCollections/src/com/javarush/task/task34/task3411/Условие.jrtc	(revision )
+++ 4.JavaCollections/src/com/javarush/task/task34/task3411/Условие.jrtc	(revision )
@@ -0,0 +1,42 @@
+taskKey="com.javarush.task.task34.task3411"
+
+Ханойские башни
+
+Имеется три стержня. На стержень A нанизаны count колец, причем кольца отличаются размером и лежат меньшее
+на большем. Требуется перенести пирамиду из count колец с стержня A на стержень B за наименьшее число ходов.
+За один раз разрешается переносить только одно кольцо, причем нельзя класть большее кольцо на меньшее.
+Нужно реализовать публичный статический метод void moveRing(char a, char b, char c, int count), который
+выведет последовательность действий, необходимых для перемещения колец со стержня A на стержень B.
+Параметры метода:
+char a   - имя стержня, на котором в начале находятся все кольца;
+char b   - имя стержня, на который нужно перенести все кольца;
+char c   - имя вспомогательного стержня;
+int count  - общее количество колец, которые необходимо перенести.
+Задачу нужно решать используя рекурсивный вызов метода moveRing.
+
+Пример1:
+Метод moveRing вызывается с параметрами: 'A', 'B', 'C', 1
+Ожидаемый вывод:
+from A to B
+
+Пример2:
+Метод moveRing вызывается с параметрами: 'A', 'B', 'C', 3
+Ожидаемый вывод:
+from A to B
+from A to C
+from B to C
+from A to B
+from C to A
+from C to B
+from A to B
+
+Подсказка: общее количество действий равно 2 в степени count минус 1.
+
+
+Требования:
+1.	В классе Solution должен существовать публичный статический метод void moveRing(char, char, char, int).
+2.	Методе moveRing должен быть рекурсивным.
+3.	Количество действий по перемещению колец должно быть равно 2 в степени count минус 1.
+4.	Вывод метода moveRing должен соответствовать условию.
+
+
Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2204/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2204/Условие.jrtc	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2204/Условие.jrtc	(revision )
@@ -0,0 +1,18 @@
+taskKey="com.javarush.task.task22.task2204"
+
+Форматирование строки
+
+Исправить метод getFormattedString так, чтобы он возвращал строку с параметрами для форматирования.
+Для перевода каретки не используйте n.
+Должен быть вывод:
+20 / 7 = 2,86
+Exp = 3,33e+00
+
+
+Требования:
+1.	Для перевода строки не должно быть использовано выражение \n.
+2.	Метод getFormattedString должен быть статическим.
+3.	Вывод на экран должен соответствовать условию задачи.
+4.	Метод getFormattedString должен возвращать строку с параметрами для форматирования согласно условию задачи.
+
+
Index: out/production/3.JavaMultithreading/com/javarush/task/task22/task2203/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task22/task2203/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task22/task2203/Условие.jrtc	(revision )
@@ -0,0 +1,16 @@
+taskKey="com.javarush.task.task22.task2203"
+
+Между табуляциями
+
+Метод getPartOfString должен возвращать подстроку между первой и второй табуляцией.
+На некорректные данные бросить исключение TooShortStringException.
+Класс TooShortStringException не менять.
+
+
+Требования:
+1.	Класс TooShortStringException должен быть потомком класса Exception.
+2.	Метод getPartOfString должен принимать строку в качестве параметра.
+3.	В случае, если строка, переданная в метод getPartOfString содержит менее 2 табуляций должно возникнуть исключение TooShortStringException.
+4.	Метод getPartOfString должен возвращать подстроку между первой и второй табуляцией.
+
+
Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2202/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2202/Solution.java	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2202/Solution.java	(revision )
@@ -0,0 +1,57 @@
+package com.javarush.task.task22.task2202;
+
+/* 
+Найти подстроку
+Метод getPartOfString должен возвращать подстроку начиная с символа после 1-го пробела и до конца слова,
+которое следует после 4-го пробела.
+
+Пример:
+«JavaRush — лучший сервис обучения Java.»
+
+Результат:
+«— лучший сервис обучения»
+
+На некорректные данные бросить исключение TooShortStringException (сделать исключением).
+
+
+Требования:
+1. Класс TooShortStringException должен быть потомком класса RuntimeException.
+2. Метод getPartOfString должен принимать строку в качестве параметра.
+3. В случае, если строка, переданная в метод getPartOfString содержит менее 4 пробелов должно возникнуть исключение TooShortStringException.
+4. Метод getPartOfString должен возвращать подстроку начиная с символа после 1-го пробела и до конца слова, которое следует после 4-го пробела.
+*/
+public class Solution {
+    public static void main(String[] args) {
+        System.out.println(getPartOfString("JavaRush - лучший сервис обучения Java."));
+    }
+
+    public static String getPartOfString(String string) {
+
+        if (string == null || string.isEmpty()) throw new TooShortStringException();
+        int beginIndex = string.indexOf(" ") + 1;
+        char[] chars = string.toCharArray();
+        int count = 0;
+        int lastIndex = 0;
+
+        for (int i = 0; i < chars.length; i++) {
+            if (chars[i] == ' ')
+                count++;
+            if (count == 4) {
+                lastIndex = string.length();
+            } else if (count == 5) {
+                lastIndex = i;
+                break;
+            }
+        }
+
+        if (count < 4)
+            throw new TooShortStringException();
+
+        return string.substring(beginIndex, lastIndex);
+    }
+
+    public static class TooShortStringException extends RuntimeException {
+    }
+
+
+}
Index: 2.JavaCore/src/com/javarush/task/task17/task1717/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 2.JavaCore/src/com/javarush/task/task17/task1717/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 2.JavaCore/src/com/javarush/task/task17/task1717/Solution.java	(revision )
@@ -53,4 +53,9 @@
         count = fields.get("count", 0);
 
     }
-}
\ No newline at end of file
+    public static void main(String[] args) {
+
+    }
+}
+
+
Index: 2.JavaCore/src/com/javarush/task/task15/task1524/Hippodrome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 2.JavaCore/src/com/javarush/task/task15/task1524/Hippodrome.java	(revision )
+++ 2.JavaCore/src/com/javarush/task/task15/task1524/Hippodrome.java	(revision )
@@ -0,0 +1,7 @@
+package com.javarush.task.task15.task1524;
+
+/**
+ * Created by Mike on 17.05.2017.
+ */
+public class Hippodrome {
+}
Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2201/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2201/Solution.java	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2201/Solution.java	(revision )
@@ -0,0 +1,37 @@
+package com.javarush.task.task22.task2201;
+
+/* 
+Строки нитей или строковые нити? Вот в чем вопрос
+*/
+public class Solution {
+    public static void main(String[] args) {
+        new Solution();
+    }
+
+    public static final String FIRST_THREAD_NAME = "1#";
+    public static final String SECOND_THREAD_NAME = "2#";
+
+    private Thread thread1;
+    private Thread thread2;
+    private Thread thread3;
+
+    public Solution() {
+        initThreads();
+    }
+
+    protected void initThreads() {
+        this.thread1 = new Thread(new Task(this, "A\tB\tC\tD\tE\tF\tG\tH\tI"), FIRST_THREAD_NAME);
+        this.thread2 = new Thread(new Task(this, "J\tK\tL\tM\tN\tO\tP\tQ\tR\tS\tT\tU\tV\tW\tX\tY\tZ"), SECOND_THREAD_NAME);
+        this.thread3 = new Thread(new Task(this, "\t\t"), "3#");
+
+        Thread.setDefaultUncaughtExceptionHandler(new ThisUncaughtExceptionHandler());
+
+        this.thread1.start();
+        this.thread2.start();
+        this.thread3.start();
+    }
+
+    public synchronized String getPartOfString(String string, String threadName) {
+        return null;
+    }
+}
Index: out/production/3.JavaMultithreading/com/javarush/task/task21/task2104/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task21/task2104/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task21/task2104/Условие.jrtc	(revision )
@@ -0,0 +1,17 @@
+taskKey="com.javarush.task.task21.task2104"
+
+Equals and HashCode
+
+В классе Solution исправить пару методов equals/hashCode в соответствии с правилами реализации этих методов(детали уточни у своего любимого поисковика).
+Обе строки first и last должны принимать участие в сравнении с помощью метода equals и вычислении hashcode.
+Метод main не участвует в тестировании.
+
+
+Требования:
+1.	Хешкоды одинаковых объектов должны быть равны.
+2.	Метод equals должен проверять равен ли переданный объект текущему(сравнение через ==).
+3.	Метод equals должен проверять является ли переданный объект объектом класса Solution.
+4.	Метод equals должен возвращать true в случае, если поля first и last равны у переданного объекта и текущего(не забудь что они могут быть равны null).
+5.	Должно быть обеспечено корректное поведение HashSet с типом элементов Solution.
+
+
Index: 1.JavaSyntax/src/com/javarush/task/task04/task0401/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 1.JavaSyntax/src/com/javarush/task/task04/task0401/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 1.JavaSyntax/src/com/javarush/task/task04/task0401/Solution.java	(revision )
@@ -16,8 +16,8 @@
         public int age = 20;
 
         public void adjustAge(int age) {
-            age = age + 20;
-            System.out.println("The Age in adjustAge() is " + age);
+            this.age = age + 20;
+            System.out.println("The Age in adjustAge() is " + this.age);
         }
     }
 }
Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2203/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2203/Условие.jrtc	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2203/Условие.jrtc	(revision )
@@ -0,0 +1,16 @@
+taskKey="com.javarush.task.task22.task2203"
+
+Между табуляциями
+
+Метод getPartOfString должен возвращать подстроку между первой и второй табуляцией.
+На некорректные данные бросить исключение TooShortStringException.
+Класс TooShortStringException не менять.
+
+
+Требования:
+1.	Класс TooShortStringException должен быть потомком класса Exception.
+2.	Метод getPartOfString должен принимать строку в качестве параметра.
+3.	В случае, если строка, переданная в метод getPartOfString содержит менее 2 табуляций должно возникнуть исключение TooShortStringException.
+4.	Метод getPartOfString должен возвращать подстроку между первой и второй табуляцией.
+
+
Index: 4.JavaCollections/src/com/javarush/task/task34/task3411/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 4.JavaCollections/src/com/javarush/task/task34/task3411/Solution.java	(revision )
+++ 4.JavaCollections/src/com/javarush/task/task34/task3411/Solution.java	(revision )
@@ -0,0 +1,16 @@
+package com.javarush.task.task34.task3411;
+
+/* 
+Ханойские башни
+*/
+
+public class Solution {
+    public static void main(String[] args) {
+        int count = 3;
+        moveRing('A', 'B', 'C', count);
+    }
+
+    public static void moveRing(char a, char b, char c, int count) {
+        //напишите тут ваш код
+    }
+}
\ No newline at end of file
Index: 3.JavaMultithreading/src/com/javarush/task/task21/task2113/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task21/task2113/Условие.jrtc	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task21/task2113/Условие.jrtc	(revision )
@@ -0,0 +1,90 @@
+taskKey="com.javarush.task.task21.task2113.big16"
+
+Ипподром(16)
+
+Теперь уже точно все.
+Добавь вызов метода printWinner в конец метода main.
+Запускай и любуйся своей первой компьютерной игрой :)
+
+
+
+Требования:
+1.	Метод printWinner должен быть вызван в методе main после метода run.
+
+
+Ипподром(15)
+
+Добавим определение победителя.
+В классе Hippodrome сделаем два метода:
+public Horse getWinner() и public void printWinner()
+
+Метод getWinner должен возвращать лошадь пробежавшую самую большую дистанцию.
+Метод printWinner выводит на экран имя победителя в виде:
+Winner is <name>!
+Пример:
+Winner is Lucky!
+
+
+
+
+Ипподром(14)
+
+Запускаем и любуемся.
+У нас каждые полсекунды отображается новый кадр с ситуацией на ипподроме.
+Мышкой уменьши размер консоли так, чтобы был виден только один "кадр" и на том же самом месте.
+Тогда можно наблюдать забег в живую и даже покомментировать:
+- Старт.
+- Гомер неожиданно обходит Лаки.
+- Слевин вырывается вперед.
+- Вперед Лаки!
+- 10 баксов на Слевина.
+- Похоже Лаки сбросил жокея и расслабился.
+- Гомер уверенно вырывается вперед.
+- Неожиданно для всех побеждает Гомер. Вот это номер!
+
+
+
+
+Ипподром(13)
+
+Теперь вернемся к методу print класса Horse.
+Т.к. мы работаем с консолью, то все лошади на бегах будут выглядеть примерно так:
+........Sleven            <- лошадь Слевин
+....Lucky              <- лошадь Лаки
+..........Gomer           <- лошадь Гомер
+
+Другими словами, в методе print надо вывести на экран строку состоящую из точек и имени лошади.
+Количество точек равно distance, округленному(в меньшую сторону) до целого числа.
+
+
+
+
+Ипподром(12)
+
+Осталось совсем немного - дописать класс Horse.
+Каждый ход у лошади будет вызываться метод move.
+Когда у лошади вызывают метод move, лошадь должна пробежать некоторую дистанцию.
+Дистанция зависит от скорости лошади (speed). В самом простом варианте, выглядеть этот метод должен примерно так:
+distance += speed;
+
+Но, чтобы было интереснее, давай сделаем так, чтобы скорость все время немного менялась.
+Для этого умножь speed на случайное число.
+Случайное число можно получить с помощью метода Math.random().
+
+
+
+Ипподром(11)
+
+С классом Hippodrome почти закончили.
+Добавь в конец метода main вызов run().
+
+Подсказка:
+run() - это нестатический метод, поэтому вызвать его можно только у объекта.
+А где взять объект?
+
+Подсказка 2:
+game.run();
+
+
+
+
Index: out/production/3.JavaMultithreading/com/javarush/task/task22/task2202/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task22/task2202/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task22/task2202/Условие.jrtc	(revision )
@@ -0,0 +1,18 @@
+taskKey="com.javarush.task.task22.task2202"
+
+Найти подстроку
+
+Метод getPartOfString должен возвращать подстроку начиная с символа после 1-го пробела и до конца слова,
+которое следует после 4-го пробела.
+Пример: "JavaRush - лучший сервис обучения Java."
+Результат: "- лучший сервис обучения"
+На некорректные данные бросить исключение TooShortStringException (сделать исключением).
+
+
+Требования:
+1.	Класс TooShortStringException должен быть потомком класса RuntimeException.
+2.	Метод getPartOfString должен принимать строку в качестве параметра.
+3.	В случае, если строка, переданная в метод getPartOfString содержит менее 4 пробелов должно возникнуть исключение TooShortStringException.
+4.	Метод getPartOfString должен возвращать подстроку начиная с символа после 1-го пробела и до конца слова, которое следует после 4-го пробела.
+
+
Index: 1.JavaSyntax/src/com/javarush/task/task04/task0408/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 1.JavaSyntax/src/com/javarush/task/task04/task0408/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 1.JavaSyntax/src/com/javarush/task/task04/task0408/Solution.java	(revision )
@@ -12,20 +12,11 @@
     }
 
     public static void compare(int a) {
-
-       if(a>5)
-       {
-           System.out.println("Число больше 5");
-       }
-       if(a<5)
-       {
-
-           System.out.println("Число меньше 5");
-       }
-
-      if(a==5)
-           System.out.println("число равно 5");
-
-        //напишите тут ваш код
+        if (a < 5)
+            System.out.println("Число меньше 5");
+        if (a > 5)
+            System.out.println("Число больше 5");
+        if (a == 5)
+            System.out.println("Число равно 5");
     }
 }
\ No newline at end of file
Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2202/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2202/Условие.jrtc	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2202/Условие.jrtc	(revision )
@@ -0,0 +1,18 @@
+taskKey="com.javarush.task.task22.task2202"
+
+Найти подстроку
+
+Метод getPartOfString должен возвращать подстроку начиная с символа после 1-го пробела и до конца слова,
+которое следует после 4-го пробела.
+Пример: "JavaRush - лучший сервис обучения Java."
+Результат: "- лучший сервис обучения"
+На некорректные данные бросить исключение TooShortStringException (сделать исключением).
+
+
+Требования:
+1.	Класс TooShortStringException должен быть потомком класса RuntimeException.
+2.	Метод getPartOfString должен принимать строку в качестве параметра.
+3.	В случае, если строка, переданная в метод getPartOfString содержит менее 4 пробелов должно возникнуть исключение TooShortStringException.
+4.	Метод getPartOfString должен возвращать подстроку начиная с символа после 1-го пробела и до конца слова, которое следует после 4-го пробела.
+
+
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ .idea/workspace.xml	(revision )
@@ -5,198 +5,86 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="8a9c2848-0864-419d-ba1c-a0669c6ee00f" name="Default" comment="">
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/Инструкция.png" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/Инструкция.png" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/compiler.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/copyright/profiles_settings.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/dbnavigator.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/dictionaries/Mike.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/dictionaries/User01.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/misc.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/modules.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/vcs.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/1.JavaSyntax.iml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/Quest.info" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task02/task0202/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task02/task0202/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task02/task0205/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task02/task0205/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0416/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0416/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0427/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0427/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0428/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0428/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0429/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0429/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/3.JavaMultithreading.iml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/Quest.info" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2101/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2101/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2102/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2103/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2103/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2104/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2104/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2105/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2105/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2106/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2106/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2107/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2110/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2110/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2111/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2111/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2112/DBConnectionManager.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2112/FakeConnection.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2112/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2112/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/4.JavaCollections.iml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/Quest.info" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task20/task2028/CustomTree.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task20/task2028/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task22/task2213/KeyboardObserver.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task22/task2213/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task25/task2515/KeyboardObserver.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task25/task2515/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3101/FileUtils.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3101/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3101/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3102/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3102/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3103/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3103/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3104/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3104/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3105/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3105/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3106/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3106/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3107/ConcreteFileData.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3107/FileData.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3107/NullFileData.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3107/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3107/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3108/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3108/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3109/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3109/properties.txt" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3109/properties.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3109/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3111/SearchFileVisitor.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3111/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3111/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3112/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3112/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3113/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task31/task3113/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3201/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3201/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3202/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3202/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3203/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3203/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3204/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3204/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3205/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3205/SomeInterfaceWithMethods.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3205/SomeInterfaceWithMethodsImpl.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3205/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3206/Big.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3206/Item.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3206/ItemInvocationHandler.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3206/Small.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3206/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3206/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3207/DoubleString.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3207/DoubleStringImpl.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3207/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3207/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3208/Animal.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3208/Cat.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3208/Dog.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3208/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3208/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3210/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3210/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3211/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3211/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3212/Cache.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3212/ServiceLocator.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3212/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3212/contex/InitialContext.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3212/service/Service.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3212/service/impl/EJBServiceImpl.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3212/service/impl/JMSServiceImpl.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3212/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3213/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task32/task3213/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3301/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3301/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3302/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3302/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3303/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3303/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3304/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3304/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3305/Auto.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3305/Car.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3305/Motorbike.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3305/Parking.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3305/RaceBike.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3305/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3305/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3306/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3306/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3307/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3307/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3308/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3308/data.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3308/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3309/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3309/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3311/RealBean.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3311/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3311/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3312/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3312/Zoo.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3312/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3313/Event.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3313/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3313/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/5.OnlineInternship/5.OnlineInternship.iml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/5.OnlineInternship/src/Internship.info" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushPlugin.properties" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks.iml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/.idea/compiler.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/.idea/copyright/profiles_settings.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/.idea/dbnavigator.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/.idea/dictionaries/User01.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/.idea/misc.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/.idea/modules.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/.idea/workspace.xml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/1.JavaSyntax/1.JavaSyntax.iml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/1.JavaSyntax/src/Quest.info" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/1.JavaSyntax/src/com/javarush/task/task01/task0102/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/1.JavaSyntax/src/com/javarush/task/task01/task0102/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/1.JavaSyntax/src/com/javarush/task/task01/task0109/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/1.JavaSyntax/src/com/javarush/task/task01/task0109/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/1.JavaSyntax/src/com/javarush/task/task01/task0110/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/1.JavaSyntax/src/com/javarush/task/task01/task0110/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/1.JavaSyntax/src/com/javarush/task/task09/task0903/Solution.java" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/1.JavaSyntax/src/com/javarush/task/task09/task0903/Условие.jrtc" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/2.JavaCore/2.JavaCore.iml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/2.JavaCore/src/Quest.info" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/3.JavaMultithreading/3.JavaMultithreading.iml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/3.JavaMultithreading/src/Quest.info" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/4.JavaCollections/4.JavaCollections.iml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/4.JavaCollections/src/Quest.info" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/5.OnlineInternship/5.OnlineInternship.iml" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/5.OnlineInternship/src/Internship.info" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/JavaRushPlugin.properties" />
-      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/JavaRushTasks/JavaRushTasks.iml" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2101/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2102/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2103/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2104/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2105/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2106/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2107/Solution$User.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2107/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2110/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2111/Solution$User.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2111/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/DBConnectionManager.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/FakeConnection.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2113/Hippodrome.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2113/Horse.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/Task.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/ThisUncaughtExceptionHandler.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/TooShortStringFirstThreadException.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/TooShortStringSecondThreadException.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2202/Solution$TooShortStringException.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2202/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2203/Solution$TooShortStringException.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2203/Solution.class" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task08/task0828/Solution.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task08/task0828/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task08/task0829/Solution.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task08/task0829/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1524/Hippodrome.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1716/Solution.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1716/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2113/Hippodrome.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2113/Horse.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2113/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2201/Solution.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2201/Task.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2201/ThisUncaughtExceptionHandler.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2201/TooShortStringFirstThreadException.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2201/TooShortStringSecondThreadException.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2201/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2202/Solution.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2202/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2203/Solution.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2203/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2204/Solution.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2204/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task34/task3404/Solution.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task34/task3404/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task34/task3411/Solution.java" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task34/task3411/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/Quest.info" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2101/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2102/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2103/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2104/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2105/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2106/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2107/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2110/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2111/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task21/task2113/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2202/Условие.jrtc" />
+      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/out/production/3.JavaMultithreading/com/javarush/task/task22/task2203/Условие.jrtc" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0401/Solution.java" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0401/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0408/Solution.java" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0408/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0424/Solution.java" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0424/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0428/Solution.java" afterPath="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0428/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1507/Solution.java" afterPath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1507/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1516/Solution.java" afterPath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1516/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1519/Solution.java" afterPath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1519/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1524/Solution.java" afterPath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1524/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1710/Solution.java" afterPath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1710/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1713/Solution.java" afterPath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1713/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1717/Solution.java" afterPath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1717/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1721/Solution.java" afterPath="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1721/Solution.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/JavaRushPlugin.properties" afterPath="$PROJECT_DIR$/JavaRushPlugin.properties" />
     </list>
     <ignored path="JavaRushTasks.iws" />
     <ignored path=".idea/workspace.xml" />
@@ -219,17 +107,17 @@
   <component name="FileEditorManager">
     <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
       <file leaf-file-name="Solution.java" pinned="false" current-in-tab="true">
-        <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2107/Solution.java">
+        <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2204/Solution.java">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="102">
-              <caret line="7" column="48" lean-forward="true" selection-start-line="5" selection-start-column="3" selection-end-line="7" selection-end-column="48" />
+            <state relative-caret-position="0">
+              <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
               <folding />
             </state>
           </provider>
         </entry>
       </file>
-      <file leaf-file-name="Валидация" pinned="false" current-in-tab="false">
-        <entry file="file://$USER_HOME$/AppData/Local/Temp/Валидация">
+      <file leaf-file-name="Условие.jrtc" pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2204/Условие.jrtc">
           <provider selected="true" editor-type-id="EditorTypeId">
             <state />
           </provider>
@@ -258,6 +146,7 @@
       <find>readResolv</find>
       <find>rugsControlle</find>
       <find>super.removeRange(fromIndex, toIndex);addA</find>
+      <find>mai</find>
     </findStrings>
   </component>
   <component name="Git.Settings">
@@ -281,25 +170,6 @@
   <component name="IdeDocumentHistory">
     <option name="CHANGED_PATHS">
       <list>
-        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task14/task1417/Money.java" />
-        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task14/task1417/Hrivna.java" />
-        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task14/task1417/USD.java" />
-        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task14/task1417/Ruble.java" />
-        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task14/task1404/Solution.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task22/task2213/Tetris.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task22/task2213/Figure.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task22/task2213/FigureFactory.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3301/Solution.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3302/Solution.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3303/Solution.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3304/Solution.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3305/Parking.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3305/Auto.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task22/task2213/Условие.jrtc" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task22/task2213/Field.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3311/RealBean.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3312/Zoo.java" />
-        <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3306/Solution.java" />
         <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3307/Solution.java" />
         <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3313/Solution.java" />
         <option value="$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3313/Условие.jrtc" />
@@ -319,7 +189,6 @@
         <option value="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task02/task0202/Solution.java" />
         <option value="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task02/task0205/Solution.java" />
         <option value="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0427/Solution.java" />
-        <option value="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0428/Solution.java" />
         <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2105/Solution.java" />
         <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2106/Solution.java" />
         <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2101/Solution.java" />
@@ -332,6 +201,26 @@
         <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2110/Solution.java" />
         <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2111/Solution.java" />
         <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2107/Solution.java" />
+        <option value="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task08/task0828/Solution.java" />
+        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1716/Solution.java" />
+        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1710/Solution.java" />
+        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1713/Solution.java" />
+        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1717/Solution.java" />
+        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1721/Solution.java" />
+        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1516/Solution.java" />
+        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1519/Solution.java" />
+        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1507/Solution.java" />
+        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1524/Условие.jrtc" />
+        <option value="$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1524/Solution.java" />
+        <option value="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0408/Solution.java" />
+        <option value="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0428/Solution.java" />
+        <option value="$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0401/Solution.java" />
+        <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2113/Условие.jrtc" />
+        <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2113/Horse.java" />
+        <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2113/Hippodrome.java" />
+        <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2202/Solution.java" />
+        <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2201/Условие.jrtc" />
+        <option value="$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2203/Solution.java" />
       </list>
     </option>
   </component>
@@ -343,8 +232,8 @@
   </component>
   <component name="PhpWorkspaceProjectConfiguration" backward_compatibility_performed="true" />
   <component name="ProjectFrameBounds">
-    <option name="x" value="215" />
-    <option name="y" value="40" />
+    <option name="x" value="264" />
+    <option name="y" value="36" />
     <option name="width" value="1311" />
     <option name="height" value="896" />
   </component>
@@ -379,60 +268,6 @@
               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
             </PATH_ELEMENT>
           </PATH>
-          <PATH>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="JavaRushTasks" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
-            </PATH_ELEMENT>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="JavaRushTasks" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
-            </PATH_ELEMENT>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="3.JavaMultithreading" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
-            </PATH_ELEMENT>
-          </PATH>
-          <PATH>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="JavaRushTasks" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
-            </PATH_ELEMENT>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="JavaRushTasks" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
-            </PATH_ELEMENT>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="3.JavaMultithreading" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
-            </PATH_ELEMENT>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="src" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
-            </PATH_ELEMENT>
-          </PATH>
-          <PATH>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="JavaRushTasks" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
-            </PATH_ELEMENT>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="JavaRushTasks" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
-            </PATH_ELEMENT>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="3.JavaMultithreading" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
-            </PATH_ELEMENT>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="src" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
-            </PATH_ELEMENT>
-            <PATH_ELEMENT>
-              <option name="myItemId" value="task21" />
-              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
-            </PATH_ELEMENT>
-          </PATH>
         </subPane>
       </pane>
       <pane id="Scope" />
@@ -440,7 +275,7 @@
     </panes>
   </component>
   <component name="PropertiesComponent">
-    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
+    <property name="settings.editor.selected.configurable" value="project.propVCSSupport.Mappings" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />
     <property name="aspect.path.notification.shown" value="true" />
     <property name="WebServerToolWindowFactoryState" value="false" />
@@ -453,6 +288,7 @@
     <property name="project.structure.last.edited" value="Libraries" />
     <property name="project.structure.proportion" value="0.15" />
     <property name="project.structure.side.proportion" value="0.42626727" />
+    <property name="extract.method.default.visibility" value="private" />
   </component>
   <component name="RecentsManager">
     <key name="CreateClassDialog.RecentsKey">
@@ -477,7 +313,67 @@
       </list>
     </option>
   </component>
-  <component name="RunManager">
+  <component name="RunManager" selected="Application.Solution (1)">
+    <configuration default="false" name="Hippodrome" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea">
+        <pattern>
+          <option name="PATTERN" value="com.javarush.task.task21.task2113.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="MAIN_CLASS_NAME" value="com.javarush.task.task21.task2113.Hippodrome" />
+      <option name="VM_PARAMETERS" />
+      <option name="PROGRAM_PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="ENABLE_SWING_INSPECTOR" value="false" />
+      <option name="ENV_VARIABLES" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <module name="3.JavaMultithreading" />
+      <envs />
+      <method />
+    </configuration>
+    <configuration default="false" name="Solution" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea">
+        <pattern>
+          <option name="PATTERN" value="com.javarush.task.task22.task2202.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="MAIN_CLASS_NAME" value="com.javarush.task.task22.task2202.Solution" />
+      <option name="VM_PARAMETERS" />
+      <option name="PROGRAM_PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="ENABLE_SWING_INSPECTOR" value="false" />
+      <option name="ENV_VARIABLES" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <module name="3.JavaMultithreading" />
+      <envs />
+      <method />
+    </configuration>
+    <configuration default="false" name="Solution (1)" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea">
+        <pattern>
+          <option name="PATTERN" value="com.javarush.task.task22.task2203.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="MAIN_CLASS_NAME" value="com.javarush.task.task22.task2203.Solution" />
+      <option name="VM_PARAMETERS" />
+      <option name="PROGRAM_PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="ENABLE_SWING_INSPECTOR" value="false" />
+      <option name="ENV_VARIABLES" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <module name="3.JavaMultithreading" />
+      <envs />
+      <method />
+    </configuration>
     <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
       <module name="" />
       <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
@@ -872,6 +768,18 @@
     <configuration default="true" type="osgi.bnd.run" factoryName="Test Launcher (JUnit)">
       <method />
     </configuration>
+    <list size="3">
+      <item index="0" class="java.lang.String" itemvalue="Application.Hippodrome" />
+      <item index="1" class="java.lang.String" itemvalue="Application.Solution" />
+      <item index="2" class="java.lang.String" itemvalue="Application.Solution (1)" />
+    </list>
+    <recent_temporary>
+      <list size="3">
+        <item index="0" class="java.lang.String" itemvalue="Application.Solution (1)" />
+        <item index="1" class="java.lang.String" itemvalue="Application.Solution" />
+        <item index="2" class="java.lang.String" itemvalue="Application.Hippodrome" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="ShelveChangesManager" show_recycled="false">
     <option name="remove_strategy" value="false" />
@@ -881,7 +789,7 @@
     <option name="ACTIVE_ACTIONS" value=",VISIBILITY_SORTER" />
   </component>
   <component name="SvnConfiguration">
-    <configuration />
+    <configuration>C:\Users\Mike\AppData\Roaming\Subversion</configuration>
   </component>
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -905,7 +813,9 @@
       <workItem from="1494663965746" duration="266000" />
       <workItem from="1494839833954" duration="9349000" />
       <workItem from="1495022878546" duration="1387000" />
-      <workItem from="1495026879239" duration="2428000" />
+      <workItem from="1495026879239" duration="9552000" />
+      <workItem from="1495105392475" duration="9747000" />
+      <workItem from="1495183800656" duration="60000" />
     </task>
     <task id="LOCAL-00001" summary="new changes&#10;">
       <created>1494667935874</created>
@@ -935,14 +845,21 @@
       <option name="project" value="LOCAL" />
       <updated>1495029703032</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary="new changes">
+      <created>1495029910744</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1495029910744</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="TimeTrackingManager">
-    <option name="totallyTimeSpent" value="14866000" />
+    <option name="totallyTimeSpent" value="31797000" />
   </component>
   <component name="ToolWindowManager">
-    <frame x="215" y="40" width="1311" height="896" extended-state="0" />
+    <frame x="264" y="36" width="1311" height="896" extended-state="0" />
     <layout>
       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
       <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
@@ -953,19 +870,19 @@
       <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3294964" sideWeight="0.5" order="11" side_tool="true" content_ui="tabs" />
       <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
-      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
-      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32628062" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
+      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3292683" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
+      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32384825" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
       <window_info id="Properties" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
       <window_info id="Terminal" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3292683" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
       <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
       <window_info id="Designer" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
-      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.31814548" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
+      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.24140687" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
       <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
       <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.24823806" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
       <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
       <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
       <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
-      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
+      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.39972898" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
       <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
       <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
       <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
@@ -973,9 +890,43 @@
       <window_info id="DB Execution Console" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
       <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
       <window_info id="DB Browser" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32732967" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
+      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
       <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
       <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.28625953" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
     </layout>
+    <layout-to-restore>
+      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
+      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
+      <window_info id="Nl-Palette" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
+      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
+      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
+      <window_info id="DB Execution Console" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
+      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3294964" sideWeight="0.5" order="11" side_tool="true" content_ui="tabs" />
+      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
+      <window_info id="Properties" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
+      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
+      <window_info id="Designer" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
+      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
+      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
+      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.24823806" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
+      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
+      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
+      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
+      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
+      <window_info id="DB Browser" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32732967" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
+      <window_info id="Palette&#9;" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
+      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
+      <window_info id="Java Enterprise" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
+      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
+      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
+      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
+      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32384825" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
+      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3292683" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
+      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.23741007" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
+      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.28625953" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
+      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
+      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
+    </layout-to-restore>
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="processedProjectFiles" value="true" />
@@ -1024,7 +975,7 @@
           <option name="timeStamp" value="16" />
         </line-breakpoint>
       </breakpoints>
-      <option name="time" value="22" />
+      <option name="time" value="41" />
     </breakpoint-manager>
     <watches-manager />
   </component>
@@ -1033,283 +984,311 @@
     <option name="FILTER_TARGETS" value="false" />
   </component>
   <component name="editorHistoryManager">
-    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task25/task2515/KeyboardObserver.java">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="64">
-          <caret line="12" column="13" lean-forward="false" selection-start-line="12" selection-start-column="13" selection-end-line="12" selection-end-column="13" />
-        </state>
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task08/task0828/Условие.jrtc">
+      <provider selected="true" editor-type-id="EditorTypeId">
+        <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task25/task2515/BaseObject.java">
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task08/task0828/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="323">
-          <caret line="19" column="5" lean-forward="false" selection-start-line="19" selection-start-column="5" selection-end-line="19" selection-end-column="5" />
+        <state relative-caret-position="546">
+          <caret line="39" column="4" lean-forward="false" selection-start-line="39" selection-start-column="4" selection-end-line="39" selection-end-column="4" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task25/task2515/Canvas.java">
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task08/task0829/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="391">
-          <caret line="23" column="8" lean-forward="false" selection-start-line="23" selection-start-column="8" selection-end-line="23" selection-end-column="8" />
+        <state relative-caret-position="-15">
+          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/JavaRushTasks.iml">
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task08/task0829/Условие.jrtc">
+      <provider selected="true" editor-type-id="EditorTypeId">
+        <state />
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task34/task3404/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
         <state relative-caret-position="0">
           <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/JavaRushPlugin.properties">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="85">
-          <caret line="5" column="60" lean-forward="false" selection-start-line="5" selection-start-column="60" selection-end-line="5" selection-end-column="60" />
-        </state>
+    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task34/task3404/Условие.jrtc">
+      <provider selected="true" editor-type-id="EditorTypeId">
+        <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/JavaRushTasks/Инструкция.png">
-      <provider selected="true" editor-type-id="images">
+    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task34/task3411/Условие.jrtc">
+      <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Инструкция.png">
-      <provider selected="true" editor-type-id="images">
+    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task34/task3411/Solution.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="0">
+          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1716/Условие.jrtc">
+      <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/JavaRushTasks/JavaRushTasks.iml">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1716/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="0">
-          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="10" selection-end-column="9" />
+        <state relative-caret-position="221">
+          <caret line="29" column="24" lean-forward="false" selection-start-line="29" selection-start-column="24" selection-end-line="29" selection-end-column="24" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/JavaRushTasks/JavaRushPlugin.properties">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1710/Условие.jrtc">
+      <provider selected="true" editor-type-id="EditorTypeId">
+        <state />
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1710/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="0">
-          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+        <state relative-caret-position="255">
+          <caret line="21" column="70" lean-forward="false" selection-start-line="21" selection-start-column="70" selection-end-line="21" selection-end-column="70" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task25/task2515/Условие.jrtc">
-      <provider editor-type-id="text-editor">
-        <state relative-caret-position="0">
-          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1713/Условие.jrtc">
+      <provider selected="true" editor-type-id="EditorTypeId">
+        <state />
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1713/Solution.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="272">
+          <caret line="16" column="79" lean-forward="false" selection-start-line="16" selection-start-column="79" selection-end-line="16" selection-end-column="79" />
         </state>
       </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1717/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task22/task2213/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1717/Solution.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="297">
+          <caret line="57" column="5" lean-forward="false" selection-start-line="57" selection-start-column="5" selection-end-line="57" selection-end-column="5" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1721/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3302/Solution.java">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task17/task1721/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="238">
-          <caret line="20" column="49" lean-forward="true" selection-start-line="20" selection-start-column="49" selection-end-line="20" selection-end-column="49" />
+        <state relative-caret-position="73">
+          <caret line="19" column="70" lean-forward="false" selection-start-line="19" selection-start-column="70" selection-end-line="19" selection-end-column="70" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task02/task0202/Условие.jrtc" />
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task02/task0202/Solution.java" />
-    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3303/Solution.java">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1516/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="272">
-          <caret line="19" column="0" lean-forward="true" selection-start-line="19" selection-start-column="0" selection-end-line="19" selection-end-column="0" />
+        <state relative-caret-position="306">
+          <caret line="36" column="41" lean-forward="true" selection-start-line="36" selection-start-column="41" selection-end-line="36" selection-end-column="41" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/4.JavaCollections/src/com/javarush/task/task33/task3303/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1516/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task02/task0205/Условие.jrtc" />
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task02/task0205/Solution.java" />
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0416/Условие.jrtc" />
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0416/Solution.java" />
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0427/Условие.jrtc" />
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0427/Solution.java" />
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0428/Условие.jrtc" />
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0428/Solution.java" />
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0429/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1519/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0429/Solution.java">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1519/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="187">
-          <caret line="11" column="0" lean-forward="false" selection-start-line="11" selection-start-column="0" selection-end-line="11" selection-end-column="0" />
+        <state relative-caret-position="34">
+          <caret line="2" column="2" lean-forward="true" selection-start-line="2" selection-start-column="2" selection-end-line="2" selection-end-column="2" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task11/task1101/Solution.java">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1507/Условие.jrtc">
+      <provider selected="true" editor-type-id="EditorTypeId">
+        <state />
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1507/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="102">
-          <caret line="6" column="13" lean-forward="false" selection-start-line="6" selection-start-column="13" selection-end-line="6" selection-end-column="13" />
+        <state relative-caret-position="1037">
+          <caret line="63" column="5" lean-forward="false" selection-start-line="63" selection-start-column="5" selection-end-line="63" selection-end-column="5" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task11/task1101/Условие.jrtc">
-      <provider editor-type-id="text-editor">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1522/Solution.java">
+      <provider selected="true" editor-type-id="text-editor">
         <state relative-caret-position="0">
           <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
         </state>
       </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1522/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2101/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task16/task1631/Solution.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="0">
+          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task16/task1631/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2103/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0408/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2105/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0408/Solution.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="323">
+          <caret line="19" column="48" lean-forward="false" selection-start-line="19" selection-start-column="48" selection-end-line="19" selection-end-column="48" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0428/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2105/Solution.java">
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0428/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="259">
-          <caret line="34" column="41" lean-forward="true" selection-start-line="34" selection-start-column="41" selection-end-line="34" selection-end-column="41" />
+        <state relative-caret-position="393">
+          <caret line="29" column="32" lean-forward="false" selection-start-line="29" selection-start-column="32" selection-end-line="29" selection-end-column="32" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2106/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0401/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2106/Solution.java">
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0401/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="171">
-          <caret line="48" column="15" lean-forward="false" selection-start-line="48" selection-start-column="15" selection-end-line="48" selection-end-column="15" />
+        <state relative-caret-position="323">
+          <caret line="19" column="67" lean-forward="false" selection-start-line="19" selection-start-column="67" selection-end-line="19" selection-end-column="67" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2102/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0424/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2101/Solution.java">
+    <entry file="file://$PROJECT_DIR$/1.JavaSyntax/src/com/javarush/task/task04/task0424/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="72">
-          <caret line="24" column="0" lean-forward="false" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
+        <state relative-caret-position="0">
+          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2102/Solution.java">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1524/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="136">
-          <caret line="25" column="0" lean-forward="false" selection-start-line="25" selection-start-column="0" selection-end-line="25" selection-end-column="0" />
+        <state relative-caret-position="153">
+          <caret line="9" column="34" lean-forward="true" selection-start-line="9" selection-start-column="34" selection-end-line="9" selection-end-column="34" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2103/Solution.java">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1524/Hippodrome.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="51">
-          <caret line="3" column="24" lean-forward="false" selection-start-line="3" selection-start-column="24" selection-end-line="3" selection-end-column="24" />
+        <state relative-caret-position="0">
+          <caret line="0" column="35" lean-forward="true" selection-start-line="0" selection-start-column="35" selection-end-line="0" selection-end-column="40" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2104/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/2.JavaCore/src/com/javarush/task/task15/task1524/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2104/Solution.java">
+    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2113/Horse.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="-183">
-          <caret line="13" column="37" lean-forward="true" selection-start-line="13" selection-start-column="37" selection-end-line="13" selection-end-column="37" />
+        <state relative-caret-position="113">
+          <caret line="20" column="24" lean-forward="true" selection-start-line="20" selection-start-column="24" selection-end-line="20" selection-end-column="24" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2112/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2113/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2110/Условие.jrtc">
-      <provider selected="true" editor-type-id="EditorTypeId">
-        <state />
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2110/Solution.java">
+    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2113/Hippodrome.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="442">
-          <caret line="35" column="12" lean-forward="true" selection-start-line="35" selection-start-column="12" selection-end-line="35" selection-end-column="12" />
-          <folding />
+        <state relative-caret-position="-2057">
+          <caret line="5" column="0" lean-forward="true" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2112/DBConnectionManager.java">
+    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2201/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="34">
-          <caret line="2" column="13" lean-forward="false" selection-start-line="2" selection-start-column="13" selection-end-line="2" selection-end-column="13" />
-          <folding />
+        <state relative-caret-position="153">
+          <caret line="11" column="57" lean-forward="true" selection-start-line="11" selection-start-column="57" selection-end-line="11" selection-end-column="57" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2111/Solution.java">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="-457">
-          <caret line="13" column="0" lean-forward="true" selection-start-line="13" selection-start-column="0" selection-end-line="13" selection-end-column="0" />
-          <folding>
-            <element signature="e#1084#1085#0" expanded="true" />
-            <element signature="e#1128#1129#0" expanded="true" />
-            <marker date="1495029486050" expanded="true" signature="1190:1240" ph="select ID, D... USER" />
-          </folding>
-        </state>
+    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2201/Условие.jrtc">
+      <provider selected="true" editor-type-id="EditorTypeId">
+        <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2112/FakeConnection.java">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="255">
-          <caret line="19" column="58" lean-forward="false" selection-start-line="19" selection-start-column="58" selection-end-line="19" selection-end-column="58" />
-          <folding />
-        </state>
+    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2202/Условие.jrtc">
+      <provider selected="true" editor-type-id="EditorTypeId">
+        <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2112/Solution.java">
+    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2202/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="408">
-          <caret line="24" column="66" lean-forward="false" selection-start-line="24" selection-start-column="66" selection-end-line="24" selection-end-column="66" />
-          <folding />
+        <state relative-caret-position="68">
+          <caret line="25" column="5" lean-forward="true" selection-start-line="25" selection-start-column="5" selection-end-line="25" selection-end-column="5" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2107/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2203/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2111/Условие.jrtc">
+    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2203/Solution.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="459">
+          <caret line="27" column="0" lean-forward="false" selection-start-line="27" selection-start-column="0" selection-end-line="27" selection-end-column="0" />
+          <folding />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$USER_HOME$/AppData/Local/Temp/Валидация">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$USER_HOME$/AppData/Local/Temp/Валидация">
+    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2204/Условие.jrtc">
       <provider selected="true" editor-type-id="EditorTypeId">
         <state />
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task21/task2107/Solution.java">
+    <entry file="file://$PROJECT_DIR$/3.JavaMultithreading/src/com/javarush/task/task22/task2204/Solution.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="102">
-          <caret line="7" column="48" lean-forward="true" selection-start-line="5" selection-start-column="3" selection-end-line="7" selection-end-column="48" />
+        <state relative-caret-position="0">
+          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
           <folding />
         </state>
       </provider>
Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2201/Task.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2201/Task.java	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2201/Task.java	(revision )
@@ -0,0 +1,20 @@
+package com.javarush.task.task22.task2201;
+
+public class Task implements Runnable {
+    private String initialString;
+    private Solution solution;
+
+    public Task(Solution solution, String initialString) {
+        this.solution = solution;
+        this.initialString = initialString;
+    }
+
+    @Override
+    public void run() {
+        String name = Thread.currentThread().getName();
+        String str = this.initialString;
+        do {
+            System.out.println(name + str);
+        } while ((str = solution.getPartOfString(str, name)) != null || !str.isEmpty());
+    }
+}
Index: out/production/3.JavaMultithreading/com/javarush/task/task21/task2105/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task21/task2105/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task21/task2105/Условие.jrtc	(revision )
@@ -0,0 +1,17 @@
+taskKey="com.javarush.task.task21.task2105"
+
+Исправить ошибку. Сравнение объектов
+
+Сравнение объектов Solution не работает должным образом. Найти ошибку и исправить.
+Метод main не участвует в тестировании.
+
+
+Требования:
+1.	Хешкоды одинаковых объектов должны быть равны.
+2.	Метод equals должен проверять равен ли переданный объект равен текущему(сравнение через ==).
+3.	Метод equals должен проверять является ли переданный объект объектом класса Solution.
+4.	Метод equals должен возвращать true в случае, если поля first и last равны у переданного объекта и текущего(не забудь что они могут быть равны null).
+5.	Должно быть обеспечено корректное поведение HashSet с типом элементов Solution.
+6.	В классе Solution должен быть реализован метод hashCode.
+
+
Index: out/production/3.JavaMultithreading/com/javarush/task/task21/task2113/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task21/task2113/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task21/task2113/Условие.jrtc	(revision )
@@ -0,0 +1,90 @@
+taskKey="com.javarush.task.task21.task2113.big16"
+
+Ипподром(16)
+
+Теперь уже точно все.
+Добавь вызов метода printWinner в конец метода main.
+Запускай и любуйся своей первой компьютерной игрой :)
+
+
+
+Требования:
+1.	Метод printWinner должен быть вызван в методе main после метода run.
+
+
+Ипподром(15)
+
+Добавим определение победителя.
+В классе Hippodrome сделаем два метода:
+public Horse getWinner() и public void printWinner()
+
+Метод getWinner должен возвращать лошадь пробежавшую самую большую дистанцию.
+Метод printWinner выводит на экран имя победителя в виде:
+Winner is <name>!
+Пример:
+Winner is Lucky!
+
+
+
+
+Ипподром(14)
+
+Запускаем и любуемся.
+У нас каждые полсекунды отображается новый кадр с ситуацией на ипподроме.
+Мышкой уменьши размер консоли так, чтобы был виден только один "кадр" и на том же самом месте.
+Тогда можно наблюдать забег в живую и даже покомментировать:
+- Старт.
+- Гомер неожиданно обходит Лаки.
+- Слевин вырывается вперед.
+- Вперед Лаки!
+- 10 баксов на Слевина.
+- Похоже Лаки сбросил жокея и расслабился.
+- Гомер уверенно вырывается вперед.
+- Неожиданно для всех побеждает Гомер. Вот это номер!
+
+
+
+
+Ипподром(13)
+
+Теперь вернемся к методу print класса Horse.
+Т.к. мы работаем с консолью, то все лошади на бегах будут выглядеть примерно так:
+........Sleven            <- лошадь Слевин
+....Lucky              <- лошадь Лаки
+..........Gomer           <- лошадь Гомер
+
+Другими словами, в методе print надо вывести на экран строку состоящую из точек и имени лошади.
+Количество точек равно distance, округленному(в меньшую сторону) до целого числа.
+
+
+
+
+Ипподром(12)
+
+Осталось совсем немного - дописать класс Horse.
+Каждый ход у лошади будет вызываться метод move.
+Когда у лошади вызывают метод move, лошадь должна пробежать некоторую дистанцию.
+Дистанция зависит от скорости лошади (speed). В самом простом варианте, выглядеть этот метод должен примерно так:
+distance += speed;
+
+Но, чтобы было интереснее, давай сделаем так, чтобы скорость все время немного менялась.
+Для этого умножь speed на случайное число.
+Случайное число можно получить с помощью метода Math.random().
+
+
+
+Ипподром(11)
+
+С классом Hippodrome почти закончили.
+Добавь в конец метода main вызов run().
+
+Подсказка:
+run() - это нестатический метод, поэтому вызвать его можно только у объекта.
+А где взять объект?
+
+Подсказка 2:
+game.run();
+
+
+
+
Index: 3.JavaMultithreading/src/com/javarush/task/task21/task2113/Horse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task21/task2113/Horse.java	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task21/task2113/Horse.java	(revision )
@@ -0,0 +1,50 @@
+package com.javarush.task.task21.task2113;
+
+/**
+ * Created by Mike on 17.05.2017.
+ */
+public class Horse {
+    private String name;
+    private double speed;
+    private double distance;
+
+    public Horse(String name, double speed, double distance) {
+        this.name = name;
+        this.speed = speed;
+        this.distance = distance;
+    }
+
+    public void move(){
+       distance+=speed*Math.random();
+    }
+
+    public void print(){
+        for (int i = 0, l = (int) this.getDistance(); i < l; i++) {
+            System.out.print(".");
+        }
+        System.out.println(this.getName());
+    }
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public double getSpeed() {
+        return speed;
+    }
+
+    public void setSpeed(double speed) {
+        this.speed = speed;
+    }
+
+    public double getDistance() {
+        return distance;
+    }
+
+    public void setDistance(double distance) {
+        this.distance = distance;
+    }
+}
Index: out/production/3.JavaMultithreading/Quest.info
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/Quest.info	(revision )
+++ out/production/3.JavaMultithreading/Quest.info	(revision )
@@ -0,0 +1,1 @@
+Многопоточность в Java
\ No newline at end of file
Index: 1.JavaSyntax/src/com/javarush/task/task08/task0828/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 1.JavaSyntax/src/com/javarush/task/task08/task0828/Solution.java	(revision )
+++ 1.JavaSyntax/src/com/javarush/task/task08/task0828/Solution.java	(revision )
@@ -0,0 +1,42 @@
+package com.javarush.task.task08.task0828;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.util.*;
+
+/* 
+Номер месяца
+*/
+
+public class Solution {
+    public static void main(String[] args) throws IOException {
+        //напишите тут ваш код
+        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
+        String str = reader.readLine();
+        Map<String, Integer> map = new HashMap<String, Integer>();
+        map.put("January", 1);
+        map.put("February", 2);
+        map.put("March", 3);
+        map.put("April", 4);
+        map.put("May", 5);
+        map.put("June", 6);
+        map.put("July", 7);
+        map.put("August", 8);
+        map.put("September", 9);
+        map.put("October", 10);
+        map.put("November", 11);
+        map.put("December", 12);
+
+        for (Map.Entry <String, Integer> value :map.entrySet())
+        {
+            if (value.getKey().equals(str))
+                System.out.println(str+" is " +value.getValue()+" month");
+        }
+
+    }
+
+
+
+}
+
Index: 1.JavaSyntax/src/com/javarush/task/task08/task0829/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 1.JavaSyntax/src/com/javarush/task/task08/task0829/Условие.jrtc	(revision )
+++ 1.JavaSyntax/src/com/javarush/task/task08/task0829/Условие.jrtc	(revision )
@@ -0,0 +1,27 @@
+taskKey="com.javarush.task.task08.task0829"
+
+Модернизация ПО
+
+Задача: Программа определяет, какая семья (фамилию) живёт в доме с указанным номером.
+Новая задача: Программа должна работать не с номерами домов, а с городами:
+Пример ввода:
+Москва
+Ивановы
+Киев
+Петровы
+Лондон
+Абрамовичи
+
+Лондон
+
+Пример вывода:
+Абрамовичи
+
+
+Требования:
+1.	Программа должна выводить текст на экран.
+2.	Программа должна считывать значения с клавиатуры.
+3.	Класс Solution должен содержать один метод.
+4.	Программа должна вывести фамилию семьи по введенному городу.
+
+
Index: out/production/3.JavaMultithreading/com/javarush/task/task21/task2101/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task21/task2101/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task21/task2101/Условие.jrtc	(revision )
@@ -0,0 +1,22 @@
+taskKey="com.javarush.task.task21.task2101"
+
+Определяем адрес сети
+
+1) Даны IP-адрес и маска подсети, необходимо вычислить адрес сети - реализуй метод getNetAddress.
+Используйте операцию поразрядной конъюнкции (логическое И).
+Пример:
+IP-адрес:    11000000 10101000 00000001 00000010 (192.168.1.2)
+Маска подсети: 11111111 11111111 11111110 00000000 (255.255.254.0)
+Адрес сети:   11000000 10101000 00000000 00000000 (192.168.0.0)
+2) Реализовать метод print, который выведет в консоль данные в двоичном коде. Для IP-адреса(192.168.1.2)
+должна быть выведена строка "11000000 10101000 00000001 00000010"
+3) Метод main не участвует в тестировании
+
+
+Требования:
+1.	Метод getNetAddress должен вычислять и возвращать адрес сети согласно переданным параметрам(IP-адрес и маска подсети).
+2.	Метод getNetAddress должен быть статическим и публичным.
+3.	Метод print должен быть статическим и публичным.
+4.	Метод print должен преобразовывать переданный ему IP адрес в двоичный код и выводить на экран(как в условии).
+
+
Index: 2.JavaCore/src/com/javarush/task/task17/task1716/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 2.JavaCore/src/com/javarush/task/task17/task1716/Solution.java	(revision )
+++ 2.JavaCore/src/com/javarush/task/task17/task1716/Solution.java	(revision )
@@ -0,0 +1,53 @@
+package com.javarush.task.task17.task1716;
+
+/* 
+Синхронизированные методы
+*/
+
+public class Solution {
+    private double param = Math.random();
+    private StringBuilder sb = new StringBuilder();
+
+    private void method0() {
+        Double d = method3();
+    }
+
+    protected void method1(String param1) {
+        Solution solution = new Solution();
+        solution.method0();
+    }
+
+    public void method2(int param1) {
+        param1++;
+    }
+
+    synchronized double method3() {
+        double random = Math.random();
+        param += 40.7;
+        return random + param;
+    }
+
+    private synchronized void method4() {
+        sb.append(1).append(1).append(1).append(1);
+    }
+
+    protected void method5(String param2) {
+        new StringBuffer().append(param2).append(param2).append(param2);
+    }
+
+    public synchronized String method6(int param2) {
+        System.out.println("Thinking....");
+        method7(5e-2);
+        sb = new StringBuilder("Got it!.");
+        return sb.toString();
+    }
+
+    String method7(double param2) {
+        return "" + param2;
+    }
+
+    public static void main(String[] args) {
+
+    }
+
+}
Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2203/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2203/Solution.java	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2203/Solution.java	(revision )
@@ -0,0 +1,28 @@
+package com.javarush.task.task22.task2203;
+
+/* 
+Между табуляциями
+*/
+public class Solution {
+    public static void main(String[] args) throws Exception {
+        System.out.println(getPartOfString("JavaRush -  лучший  сервис обучения  Java."));
+    }
+    public static String getPartOfString(String string) throws Exception {
+        if (string == null)
+            throw new TooShortStringException();
+        if (string.equals(""))
+            throw new TooShortStringException();
+        int firstTabulation = string.indexOf("\t");
+        if (firstTabulation == -1)
+            throw new TooShortStringException();
+        int secondTabulation = string.indexOf("\t", firstTabulation+1);
+        if (secondTabulation == -1)
+            throw new TooShortStringException();
+        return string.substring(firstTabulation+1, secondTabulation);
+    }
+
+    public static class TooShortStringException extends Exception {
+
+    }
+}
+
Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2201/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2201/Условие.jrtc	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2201/Условие.jrtc	(revision )
@@ -0,0 +1,25 @@
+taskKey="com.javarush.task.task22.task2201"
+
+Строки нитей или строковые нити? Вот в чем вопрос
+
+1. Метод getPartOfString должен возвращать подстроку между первой и последней табуляцией.
+2. На некорректные данные getPartOfString должен бросить исключение:
+а) TooShortStringFirstThreadException, если имя трэда FIRST_THREAD_NAME.
+б) TooShortStringSecondThreadException, если имя трэда SECOND_THREAD_NAME.
+в) RuntimeException в других случаях.
+3. Реализуйте логику трех protected методов в ThisUncaughtExceptionHandler используя вызовы соответствующих методов согласно следующим шаблонам:
+a) 1# : TooShortStringFirstThreadException : java.lang.StringIndexOutOfBoundsException: String index out of range: -1
+б) java.lang.StringIndexOutOfBoundsException: String index out of range: -1 : TooShortStringSecondThreadException : 2#
+в) RuntimeException : java.lang.StringIndexOutOfBoundsException: String index out of range: -1 : 3#
+
+
+Требования:
+1.	Метод getPartOfString должен возвращать подстроку между первой и последней табуляцией строки string переданной ему в качестве первого параметра.
+2.	В случае некорректных данных метод getPartOfString должен бросить исключение TooShortStringFirstThreadException, если имя трэда(threadName) Solution.FIRST_THREAD_NAME.
+3.	В случае некорректных данных метод getPartOfString должен бросить исключение TooShortStringSecondThreadException, если имя трэда(threadName) Solution.SECOND_THREAD_NAME.
+4.	В случае некорректных данных метод getPartOfString должен бросить исключение RuntimeException, если имя трэда(threadName) не Solution.FIRST_THREAD_NAME или Solution.SECOND_THREAD_NAME.
+5.	Метод getFormattedStringForFirstThread должен возвращать строку сформированную из переданных параметров по шаблону указанному в задании.
+6.	Метод getFormattedStringForSecondThread должен возвращать строку сформированную из переданных параметров по шаблону указанному в задании.
+7.	Метод getFormattedStringForOtherThread должен возвращать строку сформированную из переданных параметров по шаблону указанному в задании.
+
+
Index: out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/Условие.jrtc	(revision )
@@ -0,0 +1,26 @@
+taskKey="com.javarush.task.task21.task2112"
+
+AutoCloseable и try-with-resources
+
+В классе FakeConnection реализуй интерфейс AutoCloseable, чтобы объекты этого типа можно было использовать в try-with-resources.
+Метод close() должен выводить на экран фразу "Closing database connection..."
+В блоке try последовательно вызови методы usefulOperation() и unsupportedOperation().
+
+Вывод на экран должен быть следующим:
+Creating database connection...
+Entering the body of try block.
+Executing useful operation.
+Operation is not supported yet!
+Closing database connection...
+
+Обрати внимание на то, что ресурсы были освобождены автоматически несмотря на исключение брошенное методом unsupportedOperation.
+
+
+Требования:
+1.	Класс FakeConnection должен поддерживать интерфейс AutoCloseable.
+2.	Метод close класса FakeConnection должен выводить на экран фразу "Closing database connection...".
+3.	В методе main класса Solution должны быть вызваны методы usefulOperation и unsupportedOperation у объекта класса FakeConnection.
+4.	Вывод на экран должен соответствовать условию задачи.
+5.	Метод close класса FakeConnection не должен бывать вызван явно.
+
+
Index: 2.JavaCore/src/com/javarush/task/task17/task1713/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 2.JavaCore/src/com/javarush/task/task17/task1713/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 2.JavaCore/src/com/javarush/task/task17/task1713/Solution.java	(revision )
@@ -4,129 +4,160 @@
 
 /* 
 Общий список
+1. Изменить класс Solution так, чтобы он стал списком. (Необходимо реализовать интерфейс java.util.List).
+2. Список Solution должен работать только с целыми числами Long.
+3. Воспользуйтесь полем original.
+4. Список будет использоваться нитями, поэтому позаботьтесь, чтобы все методы были синхронизированы.
+
+
+Требования:
+1. Класс Solution должен реализовывать интерфейс List.
+2. Класс Solution должен содержать private поле original типа ArrayList.
+3. Все переопределенные методы интерфейса List должны делегировать полномочия методам объекта original.
+4. Все методы класса Solution, кроме метода main, должны быть синхронизированы.
 */
+
+
+
 
 public class Solution implements List<Long> {
     private ArrayList<Long> original = new ArrayList<Long>();
 
     @Override
-    public Long remove(int index) {
-        return original.remove(index);
-    }
-
-    public static void main(String[] args) {
-
-    }
-
-    @Override
-    public int size() {
+    public synchronized int size()
+    {
         return original.size();
     }
 
     @Override
-    public boolean isEmpty() {
+    public synchronized boolean isEmpty()
+    {
         return original.isEmpty();
     }
 
     @Override
-    public boolean contains(Object o) {
+    public synchronized boolean contains(Object o)
+    {
         return original.contains(o);
     }
 
     @Override
-    public Iterator iterator() {
+    public synchronized Iterator<Long> iterator()
+    {
         return original.iterator();
     }
 
     @Override
-    public Object[] toArray() {
+    public synchronized Object[] toArray()
+    {
         return original.toArray();
     }
 
     @Override
-    public boolean add(Long aLong) {
+    public synchronized  <T> T[] toArray(T[] a)
+    {
+        return original.toArray(a);
+    }
+
+    @Override
+    public synchronized boolean add(Long aLong)
+    {
         return original.add(aLong);
     }
 
     @Override
-    public Long get(int index) {
-        return original.get(index);
+    public synchronized boolean remove(Object o)
+    {
+        return original.remove(o);
     }
 
     @Override
-    public Long set(int index, Long element) {
-        return original.set(index,element);
+    public synchronized boolean containsAll(Collection<?> c)
+    {
+        return original.containsAll(c);
     }
 
     @Override
-    public void add(int index, Long element) {
-        original.add(index,element);
-    }
-
-    @Override
-    public boolean remove(Object o) {
-        return original.remove((Long) o);
-    }
-
-    @Override
-    public boolean addAll(Collection c) {
+    public synchronized boolean addAll(Collection<? extends Long> c)
+    {
         return original.addAll(c);
     }
 
     @Override
-    public boolean addAll(int index, Collection c) {
-        return original.addAll(index, c);
+    public synchronized boolean addAll(int index, Collection<? extends Long> c)
+    {
+        return original.addAll(index,c);
     }
 
     @Override
-    public void clear() {
+    public synchronized boolean removeAll(Collection<?> c)
+    {
+        return original.removeAll(c);
+    }
+
+    @Override
+    public synchronized boolean retainAll(Collection<?> c)
+    {
+        return original.retainAll(c);
+    }
+
+    @Override
+    public synchronized void clear()
+    {
         original.clear();
     }
 
-
-
     @Override
-    public int indexOf(Object o) {
-        return original.indexOf((Long)o);
+    public synchronized Long get(int index)
+    {
+        return original.get(index);
     }
 
     @Override
-    public int lastIndexOf(Object o) {
-        return original.lastIndexOf((Long)o);
+    public synchronized Long set(int index, Long element)
+    {
+        return original.set(index, element);
     }
 
     @Override
-    public ListIterator listIterator() {
-        return original.listIterator();
+    public synchronized void add(int index, Long element)
+    {
+        original.add(index, element);
     }
 
     @Override
-    public ListIterator listIterator(int index) {
-        return original.listIterator(index);
+    public synchronized Long remove(int index)
+    {
+        return original.remove(index);
     }
 
     @Override
-    public List subList(int fromIndex, int toIndex) {
-        return original.subList(fromIndex,toIndex);
+    public synchronized int indexOf(Object o)
+    {
+        return original.indexOf(o);
     }
 
     @Override
-    public boolean retainAll(Collection c) {
-        return original.retainAll(c);
+    public synchronized int lastIndexOf(Object o)
+    {
+        return original.lastIndexOf(o);
     }
 
     @Override
-    public boolean removeAll(Collection c) {
-        return original.removeAll(c);
+    public synchronized ListIterator<Long> listIterator()
+    {
+        return original.listIterator();
     }
 
     @Override
-    public boolean containsAll(Collection c) {
-        return original.containsAll(c);
+    public synchronized ListIterator<Long> listIterator(int index)
+    {
+        return original.listIterator(index);
     }
 
     @Override
-    public Object[] toArray(Object[] a) {
-        return original.toArray(a);
+    public synchronized List<Long> subList(int fromIndex, int toIndex)
+    {
+        return original.subList(fromIndex, toIndex);
     }
-}
+}
\ No newline at end of file
Index: out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/Условие.jrtc	(revision )
@@ -0,0 +1,25 @@
+taskKey="com.javarush.task.task22.task2201"
+
+Строки нитей или строковые нити? Вот в чем вопрос
+
+1. Метод getPartOfString должен возвращать подстроку между первой и последней табуляцией.
+2. На некорректные данные getPartOfString должен бросить исключение:
+а) TooShortStringFirstThreadException, если имя трэда FIRST_THREAD_NAME.
+б) TooShortStringSecondThreadException, если имя трэда SECOND_THREAD_NAME.
+в) RuntimeException в других случаях.
+3. Реализуйте логику трех protected методов в ThisUncaughtExceptionHandler используя вызовы соответствующих методов согласно следующим шаблонам:
+a) 1# : TooShortStringFirstThreadException : java.lang.StringIndexOutOfBoundsException: String index out of range: -1
+б) java.lang.StringIndexOutOfBoundsException: String index out of range: -1 : TooShortStringSecondThreadException : 2#
+в) RuntimeException : java.lang.StringIndexOutOfBoundsException: String index out of range: -1 : 3#
+
+
+Требования:
+1.	Метод getPartOfString должен возвращать подстроку между первой и последней табуляцией строки string переданной ему в качестве первого параметра.
+2.	В случае некорректных данных метод getPartOfString должен бросить исключение TooShortStringFirstThreadException, если имя трэда(threadName) Solution.FIRST_THREAD_NAME.
+3.	В случае некорректных данных метод getPartOfString должен бросить исключение TooShortStringSecondThreadException, если имя трэда(threadName) Solution.SECOND_THREAD_NAME.
+4.	В случае некорректных данных метод getPartOfString должен бросить исключение RuntimeException, если имя трэда(threadName) не Solution.FIRST_THREAD_NAME или Solution.SECOND_THREAD_NAME.
+5.	Метод getFormattedStringForFirstThread должен возвращать строку сформированную из переданных параметров по шаблону указанному в задании.
+6.	Метод getFormattedStringForSecondThread должен возвращать строку сформированную из переданных параметров по шаблону указанному в задании.
+7.	Метод getFormattedStringForOtherThread должен возвращать строку сформированную из переданных параметров по шаблону указанному в задании.
+
+
Index: out/production/3.JavaMultithreading/com/javarush/task/task21/task2106/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task21/task2106/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task21/task2106/Условие.jrtc	(revision )
@@ -0,0 +1,16 @@
+taskKey="com.javarush.task.task21.task2106"
+
+Ошибка в equals/hashCode
+
+Исправьте ошибки реализаций методов equals и hashCode для класса Solution.
+
+
+Требования:
+1.	Хешкоды одинаковых объектов должны быть равны.
+2.	Метод equals должен проверять равен ли переданный объект равен текущему (сравнение через ==).
+3.	Метод equals должен проверять является ли переданный объект объектом класса Solution.
+4.	Метод equals должен проверять значения всех полей у переданного объекта и текущего (учти что некоторые из них могут быть равны null).
+5.	Должно быть обеспечено корректное поведение HashSet с типом элементов Solution.
+6.	В классе Solution должен быть реализован метод hashCode.
+
+
Index: 2.JavaCore/src/com/javarush/task/task17/task1716/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 2.JavaCore/src/com/javarush/task/task17/task1716/Условие.jrtc	(revision )
+++ 2.JavaCore/src/com/javarush/task/task17/task1716/Условие.jrtc	(revision )
@@ -0,0 +1,19 @@
+taskKey="com.javarush.task.task17.task1716"
+
+Синхронизированные методы
+
+Установить модификатор synchronized только тем методам, которым необходимо.
+Объект класса Solution будет использоваться нитями.
+
+
+Требования:
+1.	В method0, если необходимо, используй synchronized.
+2.	В method1, если необходимо, используй synchronized.
+3.	В method2, если необходимо, используй synchronized.
+4.	В method3, если необходимо, используй synchronized.
+5.	В method4, если необходимо, используй synchronized.
+6.	В method5, если необходимо, используй synchronized.
+7.	В method6, если необходимо, используй synchronized.
+8.	В method7, если необходимо, используй synchronized.
+
+
Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2201/ThisUncaughtExceptionHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2201/ThisUncaughtExceptionHandler.java	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2201/ThisUncaughtExceptionHandler.java	(revision )
@@ -0,0 +1,29 @@
+package com.javarush.task.task22.task2201;
+
+public class ThisUncaughtExceptionHandler implements Thread.UncaughtExceptionHandler {
+    @Override
+    public void uncaughtException(Thread t, Throwable e) {
+        final String string = "%s : %s : %s";
+        if (Solution.FIRST_THREAD_NAME.equals(t.getName())) {
+            System.out.println(getFormattedStringForFirstThread(t, e, string));
+        } else
+            if (Solution.SECOND_THREAD_NAME.equals(t.getName())) {
+                System.out.println(getFormattedStringForSecondThread(t, e, string));
+            } else {
+                System.out.println(getFormattedStringForOtherThread(t, e, string));
+            }
+    }
+
+    protected String getFormattedStringForOtherThread(Thread t, Throwable e, String string) {
+        return null;
+    }
+
+    protected String getFormattedStringForSecondThread(Thread t, Throwable e, String string) {
+        return null;
+    }
+
+    protected String getFormattedStringForFirstThread(Thread t, Throwable e, String string) {
+        return null;
+    }
+}
+
Index: 2.JavaCore/src/com/javarush/task/task15/task1519/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 2.JavaCore/src/com/javarush/task/task15/task1519/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 2.JavaCore/src/com/javarush/task/task15/task1519/Solution.java	(revision )
@@ -3,14 +3,46 @@
 import java.io.BufferedReader;
 import java.io.InputStreamReader;
 import java.io.IOException;
+import java.util.ArrayList;
 
 /* 
 Разные методы для разных типов
 */
 
+
 public class Solution {
     public static void main(String[] args) throws IOException {
-        //напиште тут ваш код
+        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
+        ArrayList<String> list = new ArrayList<>();
+        String input;
+        while(true){
+            input = reader.readLine();
+            if(input.equals("exit")){
+                break;
+            }
+
+            list.add(input);
+        }
+
+
+        for(String val : list){
+            if(val.contains(".")){
+                print(Double.valueOf(val));
+            } else {
+                try{
+                    Integer in = Integer.valueOf(val);
+                    if(in > 0 && in < 128){
+                        print(Short.valueOf(val));
+                    } else if(in >= 128){
+                        print(in);
+                    } else {
+                        print(val);
+                    }
+                } catch (NumberFormatException e){
+                    print(val);
+                }
+            }
+        }
     }
 
     public static void print(Double value) {
@@ -28,4 +60,4 @@
     public static void print(Integer value) {
         System.out.println("Это тип Integer, значение " + value);
     }
-}
+}
\ No newline at end of file
Index: 1.JavaSyntax/src/com/javarush/task/task04/task0428/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 1.JavaSyntax/src/com/javarush/task/task04/task0428/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 1.JavaSyntax/src/com/javarush/task/task04/task0428/Solution.java	(revision )
@@ -4,53 +4,30 @@
 Положительное число
 */
 
+import com.sun.org.apache.xpath.internal.SourceTree;
+
 import java.io.*;
+import java.util.ArrayList;
 
-public class Solution
-{
-    public static void main(String[] args) throws Exception
-    {
-        //напишите тут ваш код
-        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
-        String number1 = reader.readLine();
-        int num1 = Integer.parseInt(number1);
+public class Solution {
+    public static void main(String[] args) throws Exception {
+        BufferedReader av=new BufferedReader(new InputStreamReader(System.in));
+        int a=Integer.parseInt(av.readLine());
+        int b=Integer.parseInt(av.readLine());
+        int c=Integer.parseInt(av.readLine());
+        ArrayList<Integer> arrayList= new ArrayList<>();
+        arrayList.add(a);
+        arrayList.add(b);
+        arrayList.add(c);
 
-        String number2 = reader.readLine();
-        int num2 = Integer.parseInt(number2);
-
-        String number3 = reader.readLine();
-        int num3 = Integer.parseInt(number3);
-
-        int PosCount=0;
-        int NegCount=0;
-
-        if(num1>=0)
+        int count=0;
+        for(int i:arrayList)
         {
-            PosCount++;
-        }
-        if(num2>=0)
-        {
-            PosCount++;
-        }
-        if(num3>=0)
-        {
-            PosCount++;
-        }
+            if(i>0)
+                count++;
 
-        if(num1<0)
-        {
-            NegCount++;
         }
-        if(num2<0)
-        {
-            NegCount++;
-        }
-        if(num3<0)
-        {
-            NegCount++;
-        }
+        System.out.println(count);
 
-        System.out.println("количество отрицательных чисел: "+NegCount);
-        System.out.println("количество положительных чисел: "+PosCount);
     }
-}
\ No newline at end of file
+}
Index: 3.JavaMultithreading/src/com/javarush/task/task22/task2204/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 3.JavaMultithreading/src/com/javarush/task/task22/task2204/Solution.java	(revision )
+++ 3.JavaMultithreading/src/com/javarush/task/task22/task2204/Solution.java	(revision )
@@ -0,0 +1,17 @@
+package com.javarush.task.task22.task2204;
+
+/* 
+Форматирование строки
+*/
+public class Solution {
+    public static void main(String[] args) {
+        System.out.println(String.format(getFormattedString(), 20.0 / 7.0, 10.0 / 3.0));
+        //должен быть вывод
+        //20 / 7 = 2,86
+        //Exp = 3,33e+00
+    }
+
+    public static String getFormattedString() {
+        return "20 / 7 = % %Exp = %";
+    }
+}
Index: 2.JavaCore/src/com/javarush/task/task15/task1516/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 2.JavaCore/src/com/javarush/task/task15/task1516/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 2.JavaCore/src/com/javarush/task/task15/task1516/Solution.java	(revision )
@@ -2,6 +2,22 @@
 
 /* 
 Значения по-умолчанию
+1. Создать 7 public полей класса. Убедитесь, что они инициализируются дефолтными значениями.
+intVar типа int
+doubleVar типа double
+DoubleVar типа Double
+booleanVar типа boolean
+ObjectVar типа Object
+ExceptionVar типа Exception
+StringVar типа String
+2. В методе main вывести их значения в заданном порядке.
+
+
+Требования:
+1. В классе Solution должно быть объявлено поле intVar типа int.
+2. В классе Solution должно быть объявлено поле doubleVar типа double.
+3. В классе Solution должно быть объявлено поле DoubleVar типа Double.
+4. В классе Solution должно быть объявлено поле booleanVar типа boolean.
 */
 
 public class Solution {
@@ -23,4 +39,4 @@
         System.out.println( ExceptionVar );
         System.out.println( StringVar );
     }
-}
\ No newline at end of file
+}
Index: 2.JavaCore/src/com/javarush/task/task15/task1524/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 2.JavaCore/src/com/javarush/task/task15/task1524/Solution.java	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ 2.JavaCore/src/com/javarush/task/task15/task1524/Solution.java	(revision )
@@ -2,6 +2,7 @@
 
 /* 
 Порядок загрузки переменных
+Разберись, что и в какой последовательности инициализируется. Поставь брейкпойнты и используй дебаггер.
 */
 
 public class Solution {
Index: 1.JavaSyntax/src/com/javarush/task/task08/task0828/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- 1.JavaSyntax/src/com/javarush/task/task08/task0828/Условие.jrtc	(revision )
+++ 1.JavaSyntax/src/com/javarush/task/task08/task0828/Условие.jrtc	(revision )
@@ -0,0 +1,16 @@
+taskKey="com.javarush.task.task08.task0828"
+
+Номер месяца
+
+Программа вводит с клавиатуры имя месяца и выводит его номер на экран в виде: «May is 5 month».
+Используйте коллекции.
+
+
+Требования:
+1.	Программа должна выводить текст на экран.
+2.	Программа должна считывать значения с клавиатуры.
+3.	Класс Solution должен содержать один метод.
+4.	Программа должна использовать коллекции.
+5.	Программа должна считывать с клавиатуры имя месяца и выводить его номер на экран по заданному шаблону.
+
+
Index: JavaRushPlugin.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
--- JavaRushPlugin.properties	(revision 753fd3e703ee82054a72c175ecd9f687e5e1a02c)
+++ JavaRushPlugin.properties	(revision )
@@ -1,8 +1,8 @@
-#Wed May 17 17:00:31 EEST 2017
+#Thu May 18 19:33:50 EEST 2017
 javarush.query.filter=
 javarush.quest.filter=QUEST_JAVA_MULTITHREADING
-javarush.status.filter=SOLVED
-javarush.last.task.key=com.javarush.task.task21.task2107
+javarush.status.filter=ASSIGNED
+javarush.last.task.key=com.javarush.task.task22.task2203
+javarush.last.task.path=C\:/Users/Mike/Desktop/JavaRushTasks/3.JavaMultithreading/src/com/javarush/task/task22/task2203
 javarush.user.secretkey=8732d8d2-6876-4b08-a13a-1f233a7d798f
-javarush.last.task.path=C\:/Users/Mike/Desktop/JavaRushTasks/3.JavaMultithreading/src/com/javarush/task/task21/task2107
-javarush.level.filter=ONE
+javarush.level.filter=TWO
Index: out/production/3.JavaMultithreading/com/javarush/task/task21/task2102/Условие.jrtc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/3.JavaMultithreading/com/javarush/task/task21/task2102/Условие.jrtc	(revision )
+++ out/production/3.JavaMultithreading/com/javarush/task/task21/task2102/Условие.jrtc	(revision )
@@ -0,0 +1,17 @@
+taskKey="com.javarush.task.task21.task2102"
+
+Сравниваем модификаторы
+
+Реализовать логику метода isAllModifiersContainSpecificModifier, который проверяет,
+содержит ли переданный параметр allModifiers значение конкретного модификатора specificModifier.
+
+P.S. Перед выполнением задания ознакомься с классом Modifier и реализацией методов isPublic, isStatic и т.п.
+
+
+Требования:
+1.	Метод isAllModifiersContainSpecificModifier должен быть статическим.
+2.	Метод isAllModifiersContainSpecificModifier должен возвращать значение типа boolean.
+3.	Метод isAllModifiersContainSpecificModifier должен принимать два параметра типа int.
+4.	Метод isAllModifiersContainSpecificModifier должен возвращать корректное значение в соответствии с условием задачи(true, если заданный модификатор присутствует в allModifiers, иначе false).
+
+
diff --git out/production/3.JavaMultithreading/com/javarush/task/task22/task2203/Solution$TooShortStringException.class out/production/3.JavaMultithreading/com/javarush/task/task22/task2203/Solution$TooShortStringException.class
new file mode 100644
index 0000000000000000000000000000000000000000..a25a27eaeed5ca9fc695ac685381b70380f705e3
GIT binary patch
literal 473
zc$}qB!AiqG5Ph4biH)h%RuH@i9<&D|)tlnMsvra}DZOvw(yXStve}5g<w@}12l!Fq
zY^>l#5Zs0LX5P%a9rpd>^$ox=HY2pq3$YQR&k&qSCG8nQYj1zb;E(mKVCbb%iJN*c
z6K29^B`N(>=e(S9BVE1}eOt(iVQZpwR%l~0YowZAKIP)UO05{;Yo&x4m%OS3HD08-
zUL<$?k(;_I63eUm21cVL9Udi_E^9Zu`-|xbLzL;-<l;)Y9lGBG2hKN!k9LRw!}<T8
zVi-7sq~vOz{7{E~x5f@U`fhg^U0RMXpe$)}pgnv6d#1ocNEkHYHdYAZuLg7|a`kS5
OYgi?YsODjvxbq46GkTo>

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2106/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2106/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..3aa0c1b1aaa6570f2e0686b69b29fe7d1fcdace2
GIT binary patch
literal 1708
zc$}3}&vRN;6#g!}9|T{3{AeqUZLk`J2Q5uZ(;taR(_l1_)CHX^?83eP1GEGpJY4C*
zapNE0Mi+IZ*<|C4#EuKcRh;o}a@v09K4_ZMg$}%P&pqed^S<x9=l%Wk_dfv4<8BmV
zm>)p|*TgJ{xi030n46NlWn(dlCA=TSGFGCvEhZvn8LN`GBe7M9t=d>qFum4B%U4hv
z3Rc(eG+H%<@!~`83oqaFTD5#h#}*ZAuh8!8G^?yFC>Rybr<({Wdw!#tFEGNoNVnbO
zzTHyD70d12yi|00-Fn{lx{tJ(n;k4y7xJY+HBVYgjaI{7Rw$)6UPVwi{i^@dJhM&6
zYwZdl$BT_t^=@x>r`oyaX+Gn{cG+ugd!2^t2SLNHH@d`B{k-Qj>6}Tw1nHBVht;yb
znE8}qv`^|aNGXgAb(mEcE%{#g(U!NToAZt+Q{C&<14Q9;M%3?AyS=6_Z?5j{vGFF|
zU9UkM&!+Fcs)wfJb!x;m@h@qGXsO-nl&k9vp))#^;)+x{cmo9o<Ct(Ti8Bt);+%um
zk#uk#Qw~1Bx`O-P^|kS#gO9LbW7EMUyk+BK2N}2yirC_moR&v(CjLmR>aR7uu5d_a
zULv7`iziMFr_Uy=J+DL0Ocx5GT;eo&h1khiVNFFJzt=9dTeUk4pKmnMh0G@2<fkyk
z&&xze^q?0KN%Trp^h#m$N^Q6rP?YZi?M3dsLl`#Kl=~Z$JJm<X&Giv>Gkq9t((J=@
zlU5(rFS^4t?L}RmWS{dGVaFJ|O|V~*nQ8t~%r3){o<t{a6i=`z?FqV&_5@#8dxFr^
zo?x_C$y*2zs!6^{svf)9pJ5sY*(1c<L)ck9Kfw$iWdB5D%l#Fh9G@R0LdRghc!H7d
zWlukRgh^SL3Lhf+1LFIL=5#zLFoOb<G4l|wy(ln;1=bP9WMRxYgtL#hcz?k*_F;q%
zh%l`6xx^a*-lj@3<n=C<;Uw{Q3t8Mp4qxK3)+iOQdZE!{o|z%%3-}uEFc#ujP@|X~
zQ~zMhMmm1ZQv6RwZ}aogT?2(IDrT^@A|fm$rl;xw;ZawU9Tj{JmI6UytCCNp5~;7g
z`S!uE*bItEJRTGe;#LqR-$W3fI_4S7!94Hn8Zj>r`*qCW1~zdMJ7jyzu`=Lj;xlR>
zb1;JyDsg$haUIq(UVMlYNlZPHQPX}%Hd%yaV+=Bb4O82v_MFBm$PeZ^%SYx-9S^Rh
T11lPs6C`mJvwEG=Rqs6qpQT1-

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2110/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2110/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..c77d56a8551c9841e4719a90ebfe51259fdf9069
GIT binary patch
literal 2813
zc$|$^+jA3D82=q|*>tmMfwr_;#9HLimP-JO;uaN)1**M(Eg+!cHrY0TWH)R!l;RD=
z`#-?=#^^&|e8F)7%4mH;#z$YA@sHq@@x}T(yD211IzuKoXU})O@Auum&7c4M@*98w
ze4}C$jyB;KMijiR;th-{7*i3!xPl24$8jQtH&skxN)k`TaSEpuyrm+6qw;V@!C4h+
zaZXa+mdiUTLU>ojdAuhVQ^B-~4y2?!4`~%$uoTQFm=%Z~%-UJ+Wr0v{-zkCcVJB?~
zw2WqLYrK@7w%jRmI!DU-Q72{QPML02o-4$#m&q0dc8;c;eDZ>M*>p?AOwu!p7yV`5
z-paOjPjb@9mAtHD4+^x;xmnLTn=K66o}0CbQ_hjBMBCmwDlw8d)1FOE^2(katfxpT
zwX1>f{J5F-ZL8xFP^<u5pd+}Z`do6@F6AxPtXQJh)|~W|VeoBo1v&%ftdkrn&CFP?
zl|Jp?kUK=JwP++H>4!9*_kuX>kHkkNhOeZoLPb;jYQPp4-0YORLdknfP*NGwEn1#H
zR{&rWp+ZX@4)(zsx#Omn5omkNJwswrQpuN?^vu-7F|*+3iFKtQqae$|Vl61Rpx`3w
zfceXtSzBO3@43ct4x8>Q1K8T&T0ot2N^Z&ua+g@n?{3Md;c0X$$Z5!9zrfm+(h6)1
z4j9e$hQXBbmzaxM=Ozl4J>dsbfvceihO0Tp^zANM1(Qj2Tm>Z!mocZI4_D}=hIw3N
z&Q=;QRLbVk7D3*}2lT(r2*0>Ae29-Ue2i-vK9NtK;yQz;;WK=$;R|##GLM0$GOjZx
z!>!><e6@U4TL>DymQwvs-Yzx4o0z^}rM&96tSAw-LVZ0f`&U=eHPNqX41u0H1uQ5#
zZMx}-A{IsD<kXS#2bTS;(a77-th8pZK}R<#wZ>K4-auMb<qD0mV5o5&dwHdQsoqA&
zt9RJB(bXz$*~Uh5p}M^1i=LHdyVL#Su2ZmFZ(d+qBS#vwl-}F7>a1$Xn8h*2wT5$6
zo};bkPwcZ)Wm{Lg3Xub$w;DJo7&+)@PcUg}86Ihlng#mGk+AEDY_0SU1!JBQkcg49
z>{(fFG;D+g;*V4|UjxLE5t+zHD(4jC@G#Tq$x@-<TE(J88#=2c9`%)<`<4RbJ%7AS
zxn{~j51!%+RDMDba_n$@hNmQV!9CJ{8{!rp){qs5`owkE%vB2*@GQ1)Z^Bk=3xq=(
z5k?Cj`hUclu^pjb5xRr$_+3QK5G`tig%R1clVs%%Vn$RL%KD}|P>q-#E+cL<=}kXF
z6ZjSbcab=A8_kl?BJexbma(pk^?Hm;8Lft@M|Cx%t7Wv6(Y~;BUyt6yNnN>z4n11N
zh6NlWsv`M27jUpb8z3!akh*BZr9e-$K%1daK=TD+K247=>R|~Rkz6!Um#|SiB5!@z
zfHpu{)F5@yNJxR6YJoPRnF7rfSV_|piwkr*EDsxRA<kKP4cGZcqZgNOqq5&*WPiXd
z{KWGOeCMD4!r%CZ=PumGgUbGp(GH22i1Yja|H?BGqFZd{ZOG5uI9j>3GBa)bk0Yfz
znK7xQi^<-ILrlKO^xMqfB}zyOZgQ6z9->EdV=K{m#1?E8eay71fElQiNnkrsR6LJC
zzBc+<2}ulL2Wc^C_#Qj4i*?f>V%W`_FcBiygT1tb6@q=_ga7m#pZLxc+xWL`KkF?a
zHWBj$+JAryf1quNM^(X#{?|}2sNkT2mlVA0uOz+#`fi-yF@BWGG5(h5v$mQLapfwc
zKzNBdqxGCX9bR)IF8@=D7Ov(4h7=r%GCZ#`JVBT3ke<um$`0$V>M()Bc+KC3eXb+_
E191(i4*&oF

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2113/Hippodrome.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2113/Hippodrome.class
new file mode 100644
index 0000000000000000000000000000000000000000..adab111cb16a3977dc2e0203bf0d803a6bde38fd
GIT binary patch
literal 3119
zc$}41>sM4&6#pHV;SR$M5D_9p(K3;Tg!B}mhh$m<njrYhE;F~`;=H_b2ceg}-&wxW
z%(YspFML(2F=MS(-)i*-^gr~muPlpx`^<xft`Zja+;jHXXYb$s?Y+<3-~ajPX8;f4
zayjnBp$Z(vkqW$sqcXf?zzV{TQ5nMJh`<iwWkiEi9hD*MNAB;pAjaT`+PHyZK~y6a
zKwRDl(M!rsDuCl6am7YDh*r@VEPFDLGa)Ko07C)nGmr_Q2{A!4Vc>+Am=t_dGJ8da
zR}H)tL^EEO#Ty1rD)^#S+*a5U3Mb<o<JN@bX3}FFo|QhPhpnCYS7%qpPA8R0M%-lF
z?p7!pOS)-0txz43Qym%4iFJgWw8y>jK_{B9yo^i3-AlH6?!=Lp?(U@}UpzTMBc;uo
zhq>6EjBrsEauW7HCO&GrL)K`FlA2I5Y{iBx*O7Hz=+^)hHs7&Bdho^^hIH4UXN8aT
zTPbbIz?-y|a-D>ypd3ECh{(+(6oSu8hV7K+BojPU9<{v@Cy}sSh1TZfxUD#$kLe|g
zhXU=bU`!0}%(GoX!?*DL_$|Wav0T>UBpk0-VP*4D<HCF0VtS`i1&Vu@sxQZ_&S>0n
zNMl{|p`4+Zm56o>dJI0Q_Z6KqE!f(X@NC!3q&z!PWM0x{xlwYn@-|iqh1yw|Y%NT>
z4D2=V7CVA@986~1u)V{PsH*1ce2dsKu>~E}H1RgxVKJC^7w?&PA0H@ey2E%)Y(<xe
z9?<KDCO*Q)20k(IsjNRUaSETC_yVUD>X%0FbjFEAY}dptbP;H-CYqddlZi7pYvL(9
zZQ>lxldSb7zQlR4dO_4Ll9BoJJmtF9l;p_7SGc6mww!(!bI+M*L%WF`c-F)d0%q-h
zC&t9r67w^nT0O72dvx3mvy*D(vF+kv%S*D<D;L+3Lcl5R)h(*>!Wm}R7_-s?_N1rp
ziGwVMgkIDZ^cT48UIb-uD(%^E9!qAZzbdEgBs=y<_mO_vigy=CTr8$j-J-F?B7;L?
z+>G$HNXKkDMI_D7Nf}qLf%_Pal?dl9vpyD~l}gzO>b5uEruJ_U<;y^#rLh5hXD<%0
zSnvTanVU1D+u0_d`rF9+`edinibR&2%QGj;R;6+j@OB(>t+0*t{2giK&rk^hQXP86
zZh^uBdfrL7lG^9^ASDxgm-4-_<$I_bC{YNt-ax5hP1bVaQ}_k`{<bX2rsw{=O2tw<
z#IXiGjzeg~KDr#neHg*Rl+@8hBljM`qnyz!9@8MU@u@(`O#}^e&!T}|dx{vQsVW#A
z`#%f@F_iYKt`2^Ss%r>jQU0z{({q2#<5~-Y;~`==Ok78Z>nLfk81PXd3Tuo_)Sbt8
zKVx|uy@Wyl3(zvcBHEi!Y8ES~!#3j?0qyZE5jF~-$hW9($s)+7q88?lsMNp~5OxpB
zI7Z3-7)&_)ei$cNQLI6{NL&fE3Q!ssKq(jEN|ey{B$qxaH1pv_lPB;RWs;9>6)IBL
z-<GFvQ(J+;f!1FUXb(+eMQavS?R+j?hM$7DKU%L8k#2x|$)t$pIM%^sJ*DZ+qoWLw
zo*=HtB8}@%uW6L*b>|V6@V%WfrLot;_cu%fePr?`R&z3oyJo4R<Q~f7AEW^ZdLxrM
zgX#m<v7)9Xi<P9aHj7o9)zopwqCSheuWBC;=}#?5!0Sx%NsY+N8Oh^NaxvzUCG{_R
zexc_|(Lk9NzP;eEKYuvaEITRVJ)1YOKcDen%XKugwEh4!pWaGM!F$ZY`%Kpd#gq!j
zoJE=C8u9s}H<5G}TQkIy{TRr3Q#)D7QZkb>@E@qTrxvR#ucI-fS8MaDe!W_kUk%Kl
ziPWv%=4<e=Z8nr(q`}u#n6&36Gr0FagYP=-`%c*2n8p1g`n72q!EOEqe-@kdy5%Zy
zSuD_TCf}!H>_rvF&lu||mhI<g;SXdNPP38EFqdbE{2UJAJWpNVxl25G5iu6vaa?BE
ze4{z(WlS-$yc>HUAKjC90edxn<E#QHnl<d)A>ElRw75?fR~PLIcfKNbIY}oaQe<mT
bGDib`1H-z~a{nVx2KJXN>X`$Y>4X0QocgCq

diff --git out/production/3.JavaMultithreading/com/javarush/task/task22/task2202/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task22/task2202/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..67e285b9bd4c710ed0dc8bd61d1177363eb5252c
GIT binary patch
literal 1474
zc$|$?-*XdH6#j1WW0TF+*3=Xgid&#132nC)tU_zC#8y+=rem-(iVtqWk}M><b+d8c
zO-5$)&1c^_yznZ_P^t{&%?F=0|BeshcQ@%2XTl7b$+`EOd(L;i`<;{g{qLU#04|`U
zVhGbo%)m%sR>d25U&S2Gt33Na!Mq9u(+PYi{g0%%D9t5l78EQh_*mfBRo5-oUC%H3
zp6%3DZda`x-*z1Vt>`$GS7?~6memr7FWQdnF9}4lxov@H!M$z?46WOawb^b~EbppW
zX)uyrcdKS&+w^Sd_kvNsZWCi_z3MiNo8}Lu*KXAf-)!9q&D>mXnVmDrZlf&;EU>C+
z+9WcXy|ylEjE3pdj4scGkb~*fh&s~en9ORHzh!!U=|(psFq!QG)2~$6{1*A-R<APM
zFH5ahHQOmV*R9(Ev1;A)$YtPKK{{^R@dc99&hI4*mVL8&Ys1_L6;ZIHV1gKBx9wG}
zRa=TQc=+@gd7FkbMigAu@ClX$7S<U1lB(&`dhoRKQ|IT-FTsBBhu*mxJnsA$JPP(Z
zclF>Pcqq?;$H6lOe${2wjD|6sRB%N@0iW_}4J%j`xbphVIP=OW5xR!Y@VSN})--&9
zbqyQX6v)3mxWMp{yrs%btLpzRblAU_Lw8!f)#NO?ZRTdW?Xg{Bi<y$6Wj5KNkv?Go
zWk-4qUYqGR5S%N;Zml$T{5#>Se<OX_!_tjcRB%#KzFXh`EPI~Gs%SPR#~|LYoSI(`
zQJ9l#wJV1MHJU9J`-~pO`5PXB{6rw+0MNcg&)_P!#_~@f9&$5)3~f9N9>XZD)=i-I
zHrFKH!MnZUOU#yM+9M34Bm0Q%A$EkJas{(f%s;}>a2zK>9F9&GM;Ig(XYBj@Ur_UV
zi2sJvQz&0QLE?Eno!o;O{ce%*)J9|}G9Qi1$1<_0gZnV1GO-K8`Yz)4B4SM0g~lXp
zKKcMdV~Jg;nV8%s@5RJ}7r~fv|0UGp8Im3RJ=8;zUB#QUC#lPOq^DD_ah%2}OyUe?
zF@cNRE#fSek;NKvC?StB&S9J9-%>@BSvLP7<wKYFm>kX%NvCXl7O_roJ%O)?sq@j}
z*kauT1v-sQBI{%^$r(S(U6eP-+(b%wL27XYIiVmg1l3Cqrv5=pW8Jw>=BbdiN<@YI
H9Y*p$6985p

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2113/Horse.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2113/Horse.class
new file mode 100644
index 0000000000000000000000000000000000000000..2a69a3d75e105c586f52b8c405713a9b533dd2a2
GIT binary patch
literal 1492
zc$|$=TTc@~6#k~W?Y7(HR%ii11+ArBkfq?AiztoJ1kj|0#K)!Gz(TuAx(kW#Jo_Vj
z@li2=#s`0Zzs6S|yquXX3zU+WW@pZvo^!s-%#T0cz5}>}l8O%8PC&yXUktuXsVHJv
zrD!HWC3oYvr{X>y@XSLVJyI~MV2(j{%(}&pTHZ4EOrvHx8%Ei0*v`f*L)6=`tSSR5
zF~qC3=bKK2YGZS@WBUsX{rQVsrBY#yrY^Zvs_a^}9cy*BzHT*Mo9i`!<5tYtn%S`V
zIY`R>rtL8lmMd=E;1e6W-lpN3-nLk#i@{c$F`l~(&mwAa-QA;3DbLZOI|S_$Pn*6M
z^wk(T%D!3IUNLt93}wUeSB2ERe4(9K#XBiTw~@tR;xwY%bcArZCtjG4^Fnu$N=l(o
zN$>1QExWsoiuKIqbW|Z^lH+LT#gK+hbZO{DkA@U_6wGT_Ku$veIR%e3EaC|Xn^f>r
z!!WWMMsY*K60!_q|7jaT_o=Rz>swZZJnKA7t(g8M-EPBls&4&Uarv$1Ta=RAU1~`;
z?Xg|s75AMSvdlU;*xM#ezKYAKIYd~ahYCoDaIq9cxL&cR#GU{RK_9JYI@PH%MtfTS
z0;Z22A)@DxAn6105#$5WmZ3F+D6L7zG(JH9o%HLY@%@z5DN6$|fI&b+9GHoSLq|l!
z!DY%`!B7Cb2t`z-^f!l)^+QNs5#6qw!&OB$@9h;>TC*d-VsuF-)Ap%SqCF?g>Boq@
zn;#l}kDkv^Qt@LX_8I%|_a~j`KlK>N17XprvJ7eJr#Ts#H;7xrlB10X8wYU}*9av}
z9IjKu8RY^7BTbIK5ohcd@nZbN1dI&YIol{ni+l<t#YA%WjGSmF=O(g2^8!_KpqRLm
zRzpUpXH-ncG^;}MV}bdMMC3vuk&uY=v4u#sEs-(gLn4y!HKvczyJ#hnr=G$kMEKov
hB89d@<W?dRZHegZiClOhQ`A$ugh(nNGA?>1{sFw%;pG4T

diff --git out/production/3.JavaMultithreading/com/javarush/task/task22/task2202/Solution$TooShortStringException.class out/production/3.JavaMultithreading/com/javarush/task/task22/task2202/Solution$TooShortStringException.class
new file mode 100644
index 0000000000000000000000000000000000000000..76302fbff2ca63e033f7c497058896dfe022f5d8
GIT binary patch
literal 480
zc$}qBO-lnY5PjLUyLN4@RzdJ4c+eh<EP7HrSQUiDgIjt}*U(0{iDa|l-|{4Q@CW##
z#K~I0iy)YRH}mG>&5-wx*Eax%*oe_UFTz@cK0|n-v~s5mjorO5Lvv_uB||S&T3%Q4
ziL@gzDJauVO)iSDu*&mAvgu~3WY`=Tlg*5EnX^hyFP?Jw;FQq}ohz-S9TuW2B{iO>
zxta4j@hEIn&bSlheGN&na0dy`Oi}saonJ(c8RE=THkX&m-_ZRY*!Q{}G|`H%&T#hs
zRSa8RfEPkf`Awyrn#&)>!QVGv8v*^ge~gT7Bn*l1nggxD3)nLS0V2Y%P99;2u=CY`
UHbuVPt#Jj*<YTG@SS8>71c^j_pa1{>

diff --git out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..e51b9c328c7e86cca90ce649e6211729e12abfd7
GIT binary patch
literal 1649
zc$}3~ds7lo6#rcmmb>B$%e2z+Q6ZTqT3VV(fQlj%5M@o{Tye!UT$*KR`cC~*Go?+=
z^a1)%P3K<7x0B7zp7;6P^SHaee*gFhU;-%(V>%eZIyxm`7}qeN;l39Sba*i7#gq;=
z9&&O$@?zSH87V&YV%Cc%Qk>He(czcbZakGFsv*YEKA*^Bb8ET9Ogs`>OGQ@V4F2S{
z_#i?hVHHDJ$2P6vG(&T=Y*id#IeAg48Wfa`N7Jd;@l4IxvJJ5@b{r$8jME41@PRbW
z(6}Q^i=i{{=JcsUdGbfg8+2T2(zJ|Jb!XkMb7H+D3rLm=qLdf5DfPOsQP{-_L&q6l
z44xU&GM!n5hJZqLwoHm0P8P~LAsKF0D_bE)RNg5P4%gY}SSVXARUNZz5lEB7sC7ii
ztwqCmCTu6YSv!ScDscMfGder7zDgZKuT3W<cBmyiTdvv#W8RegHUF(-MCLODFJ8M3
zw{gdZAnq`<om>vX?SCWXNT3@N;ZJ##$9SC2^98=h6B3!0?;0DB(!3AXaGjxVi7)dc
zU*Rd9=Fj+Zp5a-Z<1cugzvQp@Dt}EWVM^(d(Js!3jFZ|c)!7SFL)&{{6-2eT<-|W0
zjQ6t1MPY4}4BLkVEc=i=(QA5r+bB2;k--1#{Oo%<bac;|s%6Owcus78#c*QArl^*j
z^D5S`!q9b|m%*2?EW?hLM5SWTy&DOf`o0FwOI9Vg>D#rb^`Q%=p^ttWo%H{4qZ?Py
zMOrs$E^y*kkLb<x(#DnCQ|G;kH&W~k+@#1p(k98yi1U50)jhageo>+QM0MhTmmZD*
zl6<v54B{4XCU0&XWSY401^3Vp+(qLdNDCT>`svgT0=jezD1aeVPw)Wf6Ex*Bg8Oi<
z?!&Vh^lN+Y`uQI8Z)iGV_DOTIGPfKtw@P!HGPm!;Pc3zP$EDy`H0|Otv6dQZCw5q5
zKa~a=ryS@A4KPllOVil$G_toetPL91Vc|x-@IKtdaJ}$3;<8Z}`+R`vQPBe`^JdLk
d&y><VwJa%(kmRB#q_j~iso66u(vlM%{s$9Qa|Qqa

diff --git out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/TooShortStringSecondThreadException.class out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/TooShortStringSecondThreadException.class
new file mode 100644
index 0000000000000000000000000000000000000000..1567e17da932d0931a016a378a3587ec78aabf0d
GIT binary patch
literal 408
zc$}?Ju};G<5Pfda1VW&Qk&Ue|V5rzYT~J|(7)aFJb*#pa*vN4Zzr}>azz6VA2-{T5
z44kEBzjyEMto!_W{{V1-{R|OyQ|zUf5F}SpNjoQqrpHTy_*&P3U{XjW?uKq9OvP5M
zQw|EvS-WILdcF~3+sK~aw&1#>5A2zlp>L>V{bPXHY;&ER(@N{I(Z-h6NVP5n*Q%}>
zBUrt7;o`|ktu6_&QV)iU8|k}G|4?)4r{;(;CRqH-F9;5O585)druT!gvJ<~a9AV_P
o=YzQ8#yU(Kqk#kClQ)o8_ZT5{m;^Dxmc#tVfNf-<d?&c_Z=d*Vng9R*

diff --git out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/Task.class out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/Task.class
new file mode 100644
index 0000000000000000000000000000000000000000..dad0e097df1dd145aac38df591edfceef578f22a
GIT binary patch
literal 1327
zc$}3~+foxj5IvI(3|SU}T)m;75km+pASyReK=2kWWhkofZ3rtYY<5$dS*!RIK0`}_
zrB%LK<p=oYrzrMpf(Yax)@FNVdd~DY-RYh0zdwHkFoukdI1({5<Bl?YI_@H=On(e1
z3~;1%a3qu&RAxwriD4Zh7}aqPV;uK69&kKlXtG^f+QP|7-*&edS~I)ioiH8YZkuJ_
z6hlMNa{_65E<-w#^YW&`_(5^Ul%lv7n$gk9Fg#*rD`+}dKds`=Fw7?Z=io&V{p$?T
zd2h>Nh-YlqS`PA?mcJ%89ZQM!a>7{`zOB|3XH@RkMTS~<*JwgwH9w#XwPeWUiaZ6;
ziqfYdWu?gNEr~)Hnq!<n&w7EMvleYd6;lC*6o-KhbQ@?xyMaq+<(M!qi75lqc*HSd
z;4z*sbe&IcF0h>~%QrBKIRo<w`_#Y!7CD|7c#apuY2YPZG4$1z4nxZ+$;#%gm6KGb
zQ`hUjb<1^XIWOjnYi-B3#1@qx7x=#A%9C|_vOjYkMJ43hmRt@icNXxsmHuVhFG?#<
zHTDA1)=@^=p1Dd;Ne3*ER~;k@1<NJI!DN-LxZtW(QZ=pgPV#B15}LFY)XJg1yrWuZ
zYJyblElX`lsjmuOuDm^=9j_9$mK;<a?czedAos&|e1l&4%HyEwAwmx|7F`1o)n(yG
z380f~7p*pEt<e}y9f73=4iQPE523veftSg)B1)E%Z9oj_`p|KOJU!)OxQc5)I8)(S
zI8%g*<~q77GzWxM_{mR*mQa^TeT2630rg+NH;&LSP(mzCZwYz{jkFm_lgrpx`gZ)2
z{7nbPKa?UZRMd$&vdyF^4)xU}h;4${PgPA;RB^hzZqP0x+z@Vts(Q%Z2=)sGM=$+o
J^H!Mb?LWK4K;r-a

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2103/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2103/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..d9caecfe945d527ae218955da9ba10c3874ba36d
GIT binary patch
literal 565
zc$|$;yH3ME5S+D>7>B$_AUqqoBp}SI3!*`yKo%51DMEF2tmJ}YOODM~(NG~#@Bw@j
zV($_J0t!yrow>c;+0nhdzq|rC#dZ-UHY{vf*di3pWF*sbg4t^K3Au}S7!azijDqWI
z>IKQI@ItQC-PjjlUnEl97sXsUmNUY>>&H`PA|6DN&BjhDX7@TBA1&bU#OcLhmdZHl
z5^NUovrwe0V6_H(+5-X!4uu|v&oN~EsgMz&*}8L;x)X|M<n+=+Mx(BFE0PiKZ~XC0
zDE8tk@q<gLoR&ZLAE?d}a>x@p|F=!3eXY3hCV`(~7Y6^NIwnXdaxU=AVI;<U=Na_G
z#DK-Qpo<okIG5%Puu){Rv8*d<_)1Ih%+BMFNn1~L=C3HDqE{QJG9%4u%nZ#|n3+6L
ZM`NM8$Dz7@8LE6UL|Da|#-{FC{{RdzWpw}m

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..42892b59dc91e01f0ffcd067d77effde39b05d12
GIT binary patch
literal 1473
zc$}S7Sx*yD6#gzudtn@8U#ctx7s}QGf@ncSHjNfA){qzyliT*v4sB<eSyX-z&-eg|
zCi2FEKT14z%BnmdP3GJ==brC7>-5*}?>_-dVMRwH203CnYA~q8P(6k*Qio9;V~FcW
zU|fj_B_=r@>9~a{j%kj^95W2zIny$|=M1&6p$!IY(auSR#*}HvHNTvZ&Igexk)<VN
zXGLj4IHuB1jG9+4U53$A)-ETu#b@F8ZXw|bw-|`YiIZbuGLg1RzGvFjETPK6v=};K
zn<<4!l!TQ}q&>&9^0O+3+gqY27j4UuS%qMjyaxZuC5(z9oIK^$dPNYj<}&BbtHKg_
z=`hS(BhJ#oKS1JZNP8k%Tosj|F&y1A5{@U-Z)!Dzp0<4_D_2a_w1(4G#8o5%O=xDA
zzENZYPm$!9H86)~41LR%Csl<}uOOotJGT?Hx1yf26U~(DY%$L9+`tRWQ)UKUqS?TL
z5{oK<*7GiXC^+^PRfmBkEMK}>{+gAQ>QIKSKXZnrbBguMHr2o|{=YM2XwFOTZ`)LC
z=qB57A))k+>&Y^G0JcwQwO7~0v=i^BlOAo16y@2|CR{c%@QTt(lt+8)>Sb>9UAg6#
z)+^Ex)r{MG%k?W2+wo-Xf;p5e*{)g-k;|p&-jS{=a|~S<iO)tu+~~(``uf$c228CH
z$rjQQbTT?a!v|n{!F4OiaA3TPHj+lw0qy9ZvmTx3s)E@jd2_N=exT;#0cukt`_NX|
z+Bbw+!u#N(`>3O*e)I@$$BxiW@A@w0liFBB+lR4>>8d53)FRqiL_17|$hGI(wIvxI
zi-ZGLMW#nWhr1MEkMbMD2;%hr)QCRJpPa8Lm-pDfN7Co<CeZ6pgoOsw26ZU}&_mYV
z0MUskRoPE(1BB=$!~pr<Bg6n~+z;xH61D-K5WyX)m#QU1cfedAre5krA8G5*kBMI6
rh;sCE3~-`hB=i*$ujo0ZwudiWpSjc?6LU@V4p`t6nP?vb<9PT7!q;Jp

diff --git out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/TooShortStringFirstThreadException.class out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/TooShortStringFirstThreadException.class
new file mode 100644
index 0000000000000000000000000000000000000000..db8f0255ad71c5e749cbea293cf576c5bad0cf7f
GIT binary patch
literal 405
zc$}?JJx{|h5PjFA34}lqBO4PR1BQx?iUr6NF_5Ucn_7(_v615-{uUDw13!Qtg>X#8
z%EDQC_Ivm4&brU9_YVLU*i8^%JH}3o2_c$ECG8a<I69sa!fU-0gh?)yxa-@6FeP6!
zPT9+K#hW=da^Pz*w6*LASzhUuJ@994`mSb{caI*X)Ae<B&PuI|S{qwfBh@OCrn6;j
z1Yh31RN~1>tu6^kp?gz_Ob*Qt|1LQlW~K-+CfxkT9|-$H3)XP8V)wnWvK7Bc9AM;D
oHw3xkraFuqW1a)!lQ+<-dyEh}jJz0N!(sYkz$Ox3zU5u%Hy1u@n*aa+

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2104/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2104/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..d6abf57c97a9f0aae0b9142f1335c68848cbecee
GIT binary patch
literal 1608
zc$}3~OLN;)6#lLxTaK#OvGbs9+J>}{_(j}=@QfQmlfJ-d3ueNkY)~8#tC6i>%gl7o
zmOs!vWRp!9noQ{o1DkY)Kfs@1px?bxo0ygvSooZC&+|Lqz4GsW{rn4nd3<Uii`fAr
zFek;E@;GneEemhs9Vy;5@t%bgW>a`Sg$0XA)f2dc#Q}VPC24(V;WCy@tOz8&@;cp6
zAXmHVeB)Gnr@d9FhaIoIwIE>lj*KO%UfT;71*Y>aX1(Ystg&)A*mMOlHLva7?6o%B
z&S%bs@5(tr!|~UgjwjEt(+HbhSD;*L1g(nf*XebemC)&KD={}4tBdoMdf@j$FK828
z(*3&U_^cZ}4(ry&UAGY~6z&L!pntD8B#`RHT?7W}q0`u2b#@dK(#UAj={6($dcJUj
zgF0@v=aUG*gVAz4){W)A_?OL{&K5BZza-2CUCD_GaK2xuyAsY=KPUHgp7C<2KehUQ
z_*rCQs~+?^4fm=in+-k-&BzWmMsdYP4#PG^q_~P}0>%G6z{GVMXK>cW1-vGZJwke&
z^bsw2TM62Zze!G3dW~&4am>UG8z14UiH~j6uxjI`JlwKz8=nXa{qwTa6_C}`mK!ef
zHA-glg=5qz=R#j)#5Nc1BafY&&CUMAd)?4&F%a|^9*w$sLFG2<Lw0eUmV7LYpdIqg
z<>;4W2$(za<nvJ&`8$O*O!9-v@>A8wF8QUElN3`M5RwGSS9n@yhEAO+9zYaJ51|#y
z51~I$r6*OHK{-U3#Q;xfHaSJlt5F$FV;oSH93zw^2Whl<Gx3-|;xS&a^aB#cUg;3&
z;y#QLf8Qga@0ET-;=VF|MPjx16SPB&NLA)<AIba3?7}K5KeHIo50RCMKAj1>$Vlr6
zOk)>@zQ<v@THqW^%9E6*C{JU8fG6pl;tJPj9WCQMU&dp6g3zb1%-A@=Pbw-bGc8ho
z;*5#&NikwA@ne!NFJAIH=4sS#MDPcT3c4xbREH+Un-OT~)?@dV)$t>sX$4}6+)bl|
zyaF~BHH?7`Q@_p(q2Qc@kzEph^D;H!Ar#t(ZA}Q?)-=0B(7r`db((vO)cOGiYNf|W
ztmmxUi38Y=FsR}4ACc~NW;E<$=)rS*(Mu@vPhH}f!7M7rFwUWXB6W(g#4N!qz^0Bo
MGmvCe)VsR)6lmK<^Z)<=

diff --git out/production/3.JavaMultithreading/com/javarush/task/task22/task2203/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task22/task2203/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..16926c1115f673fbd3ceef498a12202a4bdd7778
GIT binary patch
literal 1553
zc$|$?&u<$=7=4r7^?KLqCOCBhr2!X8>NrhYk`QRqxHO?HE^brdDpD08v33?`TYJ}9
zuTgtzp%UD<bD`>mE3H&F5E1U2>?8jQ2g)1U!Tc~%R`Pta-+bSj_ukC<*FS#R2e5<<
z6JyAlID@x!ESOM`)v;(o>m`@u?42l<WqjAbdpH}#ITNE;F>xNNI&wNL2u$Ae{o;-v
zgvBs$y~?G#Wv3pxz9(SiJ<kc&t9GN|Gz22&UC#}30!n&jQ$St!w;h4eg6lcgo3)Y?
z+_XzoW)cOzY*#n!z?JX)q#EwH#5i3j`?c(C`*S;JHg>Y1-MG^o78d&9%wo3aSDTW+
z3c)K*c*73Djn8`I1g6sk*`2N0UM1U0uFU*5B_Le>@?_oUcP55aS>+u&7@&`AtqYhX
zr{a2fZ`-*mU{HP7pKE2m>4gIEVrZA|T(j$4Z93l9ae{4sIY*sp&35VFM0#roU1^>j
zR9H4XWSK}szZsOB%dRvoeqhJEth6wWqukNLMXU*|9p258|9i}n|E93kbgSD=U|}5}
zSh$4C^r`(_=YD&){j~k8^M!>g_)tgQ!c}}EkTb3l;A1jK&86CVoi96Ib-rfpkEzZB
zmfvU7Zs$SDXz#b5$i?=v_Rq|Glag)5yoF<URY$?XHCz|S9A1*Z*ns**>9$i2|B*U4
z)mZ4S^O!FNfqjqGr)T6T8;xe^;A%{y^ZB8dC}P*^j<+o^cc^REH;#?b&_CGyXnH90
z-+A6^giej$mEWX*WUt!wvo}~OkIS)ZY#1Ms7SQYRtx7MF!zgaz1V8vO$VY*Yw})er
zZ&^mcsAZl*JmF*n6C5MmWCW8OtzH3M#w(15JSSGMSxi7>4N%IoFj7!fm7KDyD$80@
zo85nm>Di>VG-f<P<e@5(>bHm_wbi7mK9ZB%Lrr}D;<u!#Jw|K~%B|;6f7ye^7|9%0
zKb>kpZy}m6IJ98?&?PRJ<tPM*l8*r$CdU{VT3n0cbsWJPTt7vr8N9@QzXTS!c9wE4
zknt7jne1XjSe3zXOc96t@fv%j#!rx<RrC{EM4F;b1Gn%dX9{sPags9?Z?X0mA}<IM
z(J`&#l;8s-^yu%<;z)B{C5poC8Sc|{3+EW6lh#wj64ox_EgTs*ZZd)_Vq`FI-NGzR
VGY$|(FxTywr#9IobEDL1{0TP^avuNy

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2101/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2101/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..4f0b18270ff2d846eaf9ce17ded5739c25b26d58
GIT binary patch
literal 1587
zc$|%sOLNm!6vzM9mMzDX!On|5FiuM$ekD!_P*Rh$F_hNSdDU)OPgb%mjEF6HWSN<4
zSas87zd#pk%CdA3JhaWQ?q}fxFr8`W|H`Hz)Sanjbk5b)dHl{f_x^G8^bo*hd>cjx
zxiH4DAjRSsE@4T<<uC%sg>Xg1)i6H7H7S;*_&AI_uFKymA*@RMNf@7EO^Skw8v?=W
zre(UT0{&!bM?kq@Hw=N(CDSrCdhMFwRP<VlJL4t0uD5n{$CTg0O~t)yb_KGfy4}v*
z)9>p}uX{J=>fJq0Tv{Beg~eRiZuMN#w(|69>!u|zo!l)+pIl3~nz^#;m{v3IG3ZW{
zQ71<H7Vw!Jirs=2rn@H)whVWz(Qu3|eIiZ6-FWRgl-w=s7E;n&n0$)@f!e-nNYk>b
z*Z0=-j#rC{1b=my#HFT}1Q9j9bPbp7o>Mn&nX=}{t4ii2orVcaYWM)>HKdSMaZ|%*
zxFvArP4+_1Y&8sr+!q$EH3Xu^2Aj2eM%`8MxrQ%L)NmVLYA9h{#fFAWY-!lWS45f7
zP)0??*D}|RhHo$_kpBO@KasS&-*t^P=Wh2{^3<T$rk&f8Js`57x7qI4u|v^vjixN%
zlxr7EOLz7Mh0!@#OpTgVsG~bwqbOTCl^ii^PD8z~w|d6r9eEs11Q}+_pJW~;4BoMw
zw$8B2Bf`FZYzCdpkE9FgosMB~5_6;2{<SrnpDfF@Ux7>}M~0pl(aito0gsvL9lMr=
z_j#v7kdFc(4;JMVzjD-qI*@(>@t6xArYVEo=6g6psSOP9Hr}Bg!@JxcIRD6C3iYb`
zTd3-fKC4uf=%Y$Cpj4{CK&9mE`nbtA5Iy3izp|dm_Tk&e^x@~iKgaht>p7^DajwrH
zg9H{agDXT|<|SCcd5<PN$cVGF11*!ZO^_$UqGq`A(JMlq1pH*><r%Vm&kCexf>i7N
z)p+*sAttl&bbKijUwZIE<vYLl>E-k6&ouFSFw=AZF4Ae1El4u?EK{cbfe3Q-AuiCG
zK|Kg~s~HbRVUsR;II~_0eSaaSA}Ri4+%b8bhggp|6`5x{UCJD;kn8M2tdZ!d@(Yw-
z5vV>va9mY>2U|I%#PIS#A7g!l`*^F|hjxI-_$i75oIXI*tKk_P4-k9&Mj>;EVIDWB
oZ({*lSn>*)CSZ)~46<H#wmoQg&=L5Kph{@*0tNEUd4rn&8#--ND*ylh

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2107/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2107/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..3d41ed755d3f5471c1d02d85efcc27163941ac06
GIT binary patch
literal 2451
zc$}?PZBrXn6n<{rc9Sdx!dof6wIYV_k^)sqL8PX%Km)CWra~)r32RtbvT?Jip#Bkm
zLBIH+?I=uS#__YC{5_6ZpSuZfB_GO+Gnqa2o;~-R=RD_}z4_zcUw;E|4L?NCg_MF@
z5%`b_BZz4Qw<DA(6?YWOM4)0eiaFd>k(T=TFcxqxg8TSf!J^z`B51^tw0RIk77wHN
z0?YETqTo>!?RYGmd?{C}(&{S(PXq!FN`@n#%@zuVld|+u$tVc~%hXafrZ@Gcda~@A
zR&ri1jthh{X1<`iWycU$I{kK{y0!E|KACYHvydN8=j`pI)H>zTM$*+wTi#=Ms3xwC
zCNs802X>)b0vVrVh|q*tFx^Q3f4nzKgeiO7kWkEmu~6P#Gn^%T&7vljwsX3b)g4pr
zYs!GTVG?-%IU+M;U|Tl}0`2ifXLFDk1U>hhc$Knjg0bC9xmdIv*I1w4$r;5%XS$Oo
zgqAwK1k_S3DoM^sF9Ho2SI=#cKraOagDgF3Dli!DJ!cwaub4yUrk!Ang6r&3PFH2y
z>DqRCYTC7*CVjVfNc>8@1OHD;D9{zG2}F)qCcUjB=h*qZwM`@E5?>@^mz|t(+q67p
zYn}$BrG_hbU!da{CtGUESf9~L8$_((9lR@$cyoMg)tNH;(G^IZGb@QD$GkMGLw4<o
zUL=64_(;Lm8uHjsU~1UJmO%HLw4DYE8ydF3m5ri;Z!|b4kv0u3${L<xiY-~EL>j)u
zlnlM2VOOrc!}kJBuTx7hPaWp?9q(sd!_i&akrOmqe}eqQGJRZ+pRL(hP2IwtK$O`n
zxyCkq+R|sOQ%yU0pV3^#H1zH9!(>mZ1(c%PS*%@K9V{MF!(k$g#p)?e=8~i5Sfh*a
zx`E^o)f=9SK{U;WZRrt1)%YpqJR8+K!PiOiLmqiX+0aW1#*XWK1y|T11#hF~4L7S>
zW#Sn**Vo~2&O>x?*WiGMSdg2R#X81c`^fiZahW$v7jGuUl~Y0a9(O+K16*^A`0S=;
z5`M0Lro=u(;sCzoefWPt;Du-X0iW_hlTYcVhbygWj}H;245Jr`sxP4;L@U5LK#*=i
z>As&4h$#n9mz(iZOxZ`cf`}gvJ$+Q_n|fo>Bej_C+k-a$5)G6WDEg~Hn%5N7)iXpF
z2413R56v$adkjyI<JIZ+@P3R2J{x#bUSQ6R7$w#*#F%LdrqPNtug@$xc&3Y|Iyt_V
zu!Xn0+!DmU4h4Par#EJT0Sr>A)Fzp)j5WeZi<6Tf>f7OaMJIj*!wN?DgHUiyp%;D#
zXd@Z^o1TJ{t2J`d2_{iNOrU}mf%*OlS_OW@02gfnzoUI&pn?v$QulE2Mxc+|PJzxq
zm8EB|{;cskFX`y3;F1sh&lw@$<$r}}!T2f>CNPZaM0JP%Q09nek?cGsBR$@KmLT6X
zQZvev3B1kS4KM4}T5VPGRPCKbRz2xuJzmYaW<Npus?}v$Nk%Tf_YXQ0e4=3TFGl~=
z!^LTAx<yP=HBOS$$Sw*dSn%gZtrqf>krQnetU)<)L(7|<{bvLKmeof9L6$E}SaTQ)
Gh5rNL-9=LX

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2102/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2102/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..468e26e381fa5bd4861b8c4dd2d8bd4dd06a8967
GIT binary patch
literal 1509
zc$|$>O>@&$6g@9iti+KaIEf*#lkyRYoB(n{KY)BtYQ7A1=!_W_VfCUYjzG3jN$yNH
z-L&iOyX$n*4GZYPWxC)8^l$JdSTNA@WEqDN7~;%*@7;IrJxAx>_wVa}o&)#-8yOtJ
zSsmvxI1g(SWi07f&R_@^GQ9p$?Y_$3Ygj7aqS{>=K|X`aSkbX6kY07$ZnQ3tGE4Ub
zw2Hs&2pq1tZD*s?+H!(>a?7J9SMzP@-Isx@&WTftcHL0mY|Zvt)<gM&3_9Vi70K{X
zY?hajrMzr4e6JI^etU&kE$Oxe^5%n@%CS7zZd#2faNEt5n1c+OtU7VPwZLS{-*$Ig
zCkXHE+#`C$lOcmeRp7|JtGW~I`r87h-SDdC)%zC}za0_0vFF%y*nPjiuvx8^HU$j1
zFIr$cd@oW9{T4qx+lZw7s4n*sDY8u`s<U(-xM-I4(GQ#*&#@z`cgxR6x01M-k45Rd
zC=w|=_;8#KQy|muJAv)oaAPukwa=?01BWp#u<+?k(y?Y>9anUGW8f;jCCvlS6G;rr
zVopcJz%^Vqa0>G}ZWy?UTL!AQt>cb?8tN2tP~+~_Lzdv24O~eh4W;9t0i4R}JDH6i
z!^mmz!tXGDs;7$UTi<a$B2I}TTNG~M05|2_QzwtJr<t2-(vE#dQ_eeiTytzs2F`Z9
z--TJT^pQRgfJqxtjmP9W?SDJH<Nx>3<$T|fURZ6m{lKZnkjYc#0S{vnC-{~RLH%hE
zs;9I^c(S+(uEPs|Lp<eX2szqx>?~q}*60Ob5>s49k;l;_`Ddi~1D0|_U8Gk3f>zL;
zA>D<pw&Nqc{WFYoF}g-qvF{oH%@7Khqy3B}k8>POVxDtQrd8m_djL3w>6q3cGYW*C
zN0#&otTL)bC?RC?tm3mXg`d`nh2Jr(Jx)EQBNc<?`0>CQT9audjIrDRBuff~SfVUF
z3PfYni5TQ$Pm@;|<7-i4ngIUFyJ01xQXq3@p|<#ZEww&d`~!1~v&)yYX|0Q~oY6)0
zH>9VvC%>e`pKo4>CvPd`d+97*rmRaOSH?M9h-u|n{3tth8lRI&nuO1gIAStWNWCFX
UO-G6Uf*qQE$x?i&v9yc-0pnOu4gdfE

diff --git out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/ThisUncaughtExceptionHandler.class out/production/3.JavaMultithreading/com/javarush/task/task22/task2201/ThisUncaughtExceptionHandler.class
new file mode 100644
index 0000000000000000000000000000000000000000..0bf7bb01cccfa2f26ea4782a46c56ede66921532
GIT binary patch
literal 1676
zc$}qF*-{fx5IuJiGGQ15!XhGS*fa|gh`13%6p5e#tP1kr+hsD93?wr+i_53@1-^<8
zvC6Xi0Kdty>^lidLJ-uK?%UnB`<&a|Ge3TP{SIIjD+(^)Mi?;}@h}n!l9*I*6I1O-
zVOl{aW)!4xD~wrT+!o@FjJq=K$+*uDnm0_tU0?{r;#&;CC99w_bma_FU-v58y1mJ_
z%jAjVERC19xNQi#?hLvm!(mv=X;vk*!{2b*b4n?fJG;I}r|W8ZCbda7Uz!^CiY0gX
zou==(hGnjBvryLU3`39C9Aikta-wFc%*`U@+d3~~8a>uq!6PGxGgojtai0Rjv%h5;
zJ>GF`!z?yt=6xSUJM%8rcGvix|5_RI4AG+QW-YtIT~{yEE|R(7mZ(oYAj8^uS)YWA
zw_-8U5;CuAmRUH!Y)va`*p7Q}Maf&9t?5}q%x&aP)0h$@RCJ?<L7i}-bJ4n>iJU#>
zyjAvU<CA8_WIRx@fQQsO6^nQz<FSe*JW(-@Q5nlBvUo~2(_<>eFsfn%qYMlGw@nP)
zM{V5L-qAH$jd=4+#!pWlJUyhYnx<|qmAT{SP6JTBzDeE9KnyZXXPsB5?|reBBM#}W
zJzl1I{l|BwMm-aM)rj-narFv)u9oK>F1BH%UQjKUD(bvK6?<E_iO8O?%4QSL!S-!Y
z`#b4xLZ3hVTG~j{4v>tHl_JfAH}M5*pAHgwNrrr90DUCY+6DAufHcEJ4AzsskvB*>
z7m?N@!DJO}RfImE?=$2?axx-S5w4>BBc>ust6+y8>^X9%<k<Id1&6DUeI^0YT?iuz
z1(WE&1A5GJ@(6B;8h)LdI9<Y!&o_t57^c?*u!<{GD}Za{RS@`zsEp`vCuP!B)?f0B
zw5TMpPfb0D9K(?gail{Wsg5H~HJqSW`7`Sd{6pRGbJQLB>$(yqeCs+geuu=GBrz9i
F{|)QHa=HKj

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2107/Solution$User.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2107/Solution$User.class
new file mode 100644
index 0000000000000000000000000000000000000000..1521db7e5510480b1b2310f68174558a34dc7bd9
GIT binary patch
literal 867
zc$}S*U279T6o%i)CRr1=Catx8)Q{ArZMukSRS;CXi3)+xUPKGMoNR}5>t;6WhxoG;
zS_=yP0DqMD&NQ|XZ`6f3XXea#pEGA?zW@004Zve;)ZyZ04Q1Ri=C+GgoqolbyDnA*
z963?~q9;(+a?I&M|4_b{K`iws802ZBN6!SR&m$e>F9eo4y+8Licd70s`&2jjkyhKq
zc&O4hau{1)63Td2rjc1sgXR1n%IMx^Di!d0TC21h%PdojZuP@t9GEI;ksSoN%-&h^
zaBJ!wJP8I#T;x%r+lIgcR>C;Z1V8F*{)f8$>O-g|CX%^m3oMdy-sR5lP=&ck8ze;<
zs@IWeVeS{?zRC39Va>w@)I8L2(Z#wz@Q(*Ej5!Ziuq4o&EiceM4|Pqm+etnsCX*!1
z)&AM}d7&M19sb|f#tI*U%jZ(!U;{88d!Th7%$aB}aka+`hrZ#TK={kYDEaq};e4{v
z2JHetK$~`rn01Oa&}5`_D#JV$ExcjN2s<-{N>s3GdQ;{pS7xvI73Dquh*gf@oS^dY
ztWMSL`<CsU=1$pHIgI*R^CgMbr^J8}lU4CQqdJRe{f4Q`Vwicu<}c&2{VRO4xWh(k
FKLPs5uT1~|

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2111/Solution$User.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2111/Solution$User.class
new file mode 100644
index 0000000000000000000000000000000000000000..376c1e0240475d690f9cbe09d87cb8a8bad8a4d7
GIT binary patch
literal 1056
zc$}3}+iuf95IyTSi4)v5q?eRlpg>C!lh&k^d&2_}NRc9V2o016Bqy<27ssw_r!NSJ
zPXdXg5=eXiABC9N7?236;API49nZ{}+4Z;YpT7dw!EP4kv5`Rz*Vq)<l-QKhFtSKt
zL&J5(3Y$$0Ta2cL8yc!ix6{~3<CcKp^aMmhK=rJ?Es$>>Stpk1THb-#iUP+wcp#8;
z?GxJ-NV#?x`W}&8$8(~G0*j@_WJ04+Zd1X!-=l&vO~<pJ4*DHCcy4uE*~0HyZrchR
z_Txh}I&?yUz0eK>^oHlzLEW{&(5BOBv+MUw?h_2cLo>3%H_~iZW2jcmmhTQC$M@E`
z0%_JFe=J8}u2lZpRN0n42)gzYhx<?c%-`ZKbu8kxjyz^{%wb-~0<!{U1qy#wdNgp{
z9*fqv^INA^({TrP+1#VU${H`WR%HLa^yM;Z0vV>fPfECqD`}7>^FId_$o<yytaD^{
zBY{MT_n)$kk8O``ce6A({p3R8F-XHosd09=epcA{_X%j~9KB;eg~GcgrtrEYF2sHz
zMtW<wKz50|_v9xDmyA;gV|fV0s0@)XR)<iHd3A{7N13zC-_UCZ_NYf28N9$WUQ)$<
zs`Uyh@@JBju!=Q6GFBoaV=angtR^8D>rp9AHx{e$r8?m87o_%2k<M!)WQ<QxM#$#R
zjd_9~R~$jlPmK>$4o;7Gl6dYN1xJ|q@Jo0~7JV&6>f;8nNCj7=UB@NDEX8uTiHpem
E0F!^<lK=n!

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/DBConnectionManager.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/DBConnectionManager.class
new file mode 100644
index 0000000000000000000000000000000000000000..24f5beb68681f64d784d144da7668901f557e2d7
GIT binary patch
literal 548
zc$}S4yH3L}6g@X>+7b$V01_)(%YbQA!~kNTs8fLfREg0IR_Zpjr8Mbx!Bhz(K7fxx
z*dgL22EfBP_jS&-<>!}&Cjeb+d2rDvqv^r1yivv`p>!;jOil=eR(nV&_VleF)CN+C
zi*z;;@iiYsrqUeffJZ|fOPlA#VltL<!r>s$GdAH19;fp$OZa@6f#1og<Fm8Vo>oc(
ziPY+xD;|pYh|mZ{(&tn0(Ia$Q?O*tPRT(SqN~duk`qEx(`-gRV*072a%7p#DE+8EI
z>y3oE)v$=GkX?=@rimRC%}?0lfb4w?R!qhWlVNvv3A)ePD+Wthu>j9t^=$yFCW49A
du%3(k%nYbJ!ns+ZaQ98`e$rRo^|frO{t9{8f*}9^

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2105/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2105/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..c5712f27cd8bf0001f005a3eb9d564b5400c725c
GIT binary patch
literal 1609
zc$}3~OLN;)6#lLxTaK#OvGbtdwrN`0`qjE|Q(kdHAkYUmZNW^Klnsg_Vl}cAESZ_?
z+42XvhitMbLz5|;VPF$x_yhbI2Ker^+QhWXz{2O8d!FC<?v;Q0^T(e6%;94TS<H?g
zftnOo<Z;f#RSU1-bt&F3@ur0oW>a`8g?Wof^<%h(g%P}sMQOcb;ax15cuyelh1Uxs
zfn4Lh^OaNeo$f}p8TGvG#=L;xJ2IB6dtEPD5V%lyKI?f;afOvj!MZDuX?R`tcE7Xc
z_C9ged{@p1T8_Ws^gMZvokrC5LV-%76?CeyU#}mwtC16KDp8w_)#a<zX5jZDFX$3o
z(*3gU_^g{e3hU0=eYX|O7w-v(V0f=MB#;W@E&`*?$Z2gZJ6j40X=JqRgzW)-y->Wx
zK|MF@`y@i}V00XhbyJ1U{$+Egw?RzfF9@?iC^=C9&iAWLSHhVZ=45;8DKFQCQ|teS
zp9MCynnAzUa<6-`+33^ICE3BoB;L1?!?=wJDX!y&K<U2^Fmcny37oWX7Ox6q50Ty^
zeMC#%mc7=dyUj<o9P~q1j+`=a%f<&dY2rg04J_NZEf05W+{H%%WB<G@bqAz1wc$of
ze2$XZLh%T<$~iw&IiQ;x53$Ei&ieXr;&vFh9R`9v!;^!qUQoTu`iNazrz2lWE9geN
zbUFG383N{(Jo$VTM&Vv@1vC8Oviw#x(o2GA<s`?{281Mm@+F>DnW0l>O8XF{@*`-a
z$|L9xRq1h6W>6ldd>JEn1!?4I0jCFL^yC3$$uUA%a*#%wR}+u<Js#tg%HJVj?3NFZ
zF73f6^Y<+h`fm9bBpxW^XI@q52WSVFkgCGp9+D4`*@0D2er7SEA0R6geL53%kdfA}
zFpV7;`Ywm*YJpQQDW@q<^E^ZA4CPsz$2r`fJY2?mwv5NBX+l4bCC2guKclFy%(O`T
zffFXqB*lca$gfF0y?DuQn5R)+9KatfDd?tzQy-how+Eo5TaVqJ*Yk%!(+WhH+*K$q
zDqvHChB2^l>T?7o6r58qvWwy`UZzGoghCs!tqH-~x`09q?Q0}er`i*wR`)T|C_h1B
zHD~3H?ZbYIQ4ODdkMyuJqhSwY51-*1yo6c)tJjF*3az;#7;7k^M4h56a|1!tfK5H{
NT!JL4s@~P*zX97<NB95$

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2111/Solution.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2111/Solution.class
new file mode 100644
index 0000000000000000000000000000000000000000..f0b1b200fe8f0d8faf549a2d02d37868693d72cf
GIT binary patch
literal 2782
zc$}S9TT@e47+pKJlgj}tkVtATST79_Ou-8pE{YIKGz2k-qE&kc2RITEJULOcx0lZJ
zH}t{R+Q-_lI;oxV#zP<b+NaL+PdJ?^UHc>i0ytC4O!np5-?!G@-|g_*KR^Ep-~_(%
z;{e8ecpGUiCKO!u!-eqxCUGTz45k9OifJ#d$@#h$GjhJ+#Z50hQE<zTCfp9-4nCD~
zO~I@mEyzksZsz<5L6-#c5|EMw1&ac%t3}-uP?Pz*ZjR)%Vo@&&__GD>vzAfF3j|Yl
zwfkDEcrO<lsfqgqJOf7Fu!aQMB716dOcQ>jFsBPNrHs6uE-laM=9D&@qog@i$ZEN1
z%{1h`Ds)+k2HB&jY+*SjA<a^8F=lDSC41=YsZKpTu}mRXs@}u9pj+}4v}}%aRIb9a
zTr6c2EuK4!IRTL*d|q3&scn^<mS2cvEYrv@P|2Os@9Q}}DyJ8V^3@KB*ShtvD|)e%
zvog9wbQP^-tL`*oX_mgM=jEv&$Np_clc~gNR$r;!)_t#}n-583+JFN4cHcNu@0^D#
zn+_V;p*!#fo;oaj)IUV{2HrNiG_I}KsCFh83hpXcV$vwcF<S(D8Dk-@StXOSiCu2}
zf5hH-Bd_I*M}%}nWP12(o}sf{%bG#Qhaxw32guGP&0L^b%O1x>$`ndwR=;3KH#KZh
zACsCY+L2K49^Mz|E$TU@XM1uq+CG}hTuu$oBu4L~hsP7q_Ecgzk&;s;Gm&neHw(+{
zS2Kw#jPv%l=a=+3=>Y}HD)K1MYbsW7kA72Of){ioM^#uT2{hJIsJM>@%mAB+8Bk#o
zh`pgN<%3okFclB+NX2JJ&?{R$nOZap4`gIje2y<zzk8;liZ7*CMx}A*f4>0pb&F|Y
z_AZ@SC#nR5Pp{7xR^9Ge*)FV=*XC2|n+aP;*3@aY%{a7~l{*Vi)mQaw$<ik)l@^KY
zkx#EF?7Y5e*~xi>@nK&{N}}Li0PH6|Dr~;@=<7-96SXap+$~NfWr91kxw#!|6%Y5z
z>$tPILQy6+wKAoZ750y!KDX6<>tk<MOw$U{ExX#MOf9S9AipgK_^n}*%6j0+#dSO7
z0v~X9fpQ0Df9DH`&aR)}c*>mvhd4IE$?-#4MBqaQ4s#c(XyXWu0`^LxvISBv!ZTtz
z`=Id41ku;*Oud9_<^|m2ozLJX!y}LuaaVU&8HxjOw}^Yf?lQar-(oE6ZuXVoci@!5
zWuOd|Dqb!dDpDVpjg_T8`VvhuK_%=B`hxx!*jL6|4qSV(@ht3K$E~nu9bpOFEbs*B
zxDxh+mFH-Eg7Y=$X-XB+D{Jw9G&)jm6pE`fQf(uDRT>Vgb+6-k*tL$f?lOW>?_%5?
zc7@%x-q5D-B!%uc#cS~fS{$mg2*w*}(P&%vD#CEX8d=ia&#_;OM}I&7U*Kze!;kr4
z6!Ew^e@A!!h%$cR{xQC{_kZ9|{Kb76e#fiIEEpisAX-F-`&Ysx_XvnCag4!p*@3-{
z{T!nV?=f=qB8VPZ9%oYYkm)3)r*H;+Y!#<5!PO1)v*8W!4ufRwA@d;FdWbwIx-d-S
zArZq_aUAEwNsQQuGSAeI7#-+jI*gL7i$DICLzZsJd_)bAsgrsK@f0z91UH=#B7QHN
z#Pje*Cu9nWzG}KT#R=Xn%47?ODDT+EggZ^ST9cfiBu>dQv~KVkih_Ox0}2Ke3@JFP
z;2cNbZ=^F^1d<%a_}ich)Ys?&auQPAvq5<G4n1H}o{iO@TF|&lrSew;a!Vj*O$#`$
zVAzB6cIk~UN^H`VV#1VNTtJWo+9s=L9crbR!UD2Zopwl@X#|XMOfsYw(TYoU7}Sb!
z)q!zaU$nC9D~+Iqarl^Km1fXoHwyl?dVt3k7~8M}87|uAm+UcxckMpF=EGj|4t)Ot
D?}KB-

diff --git out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/FakeConnection.class out/production/3.JavaMultithreading/com/javarush/task/task21/task2112/FakeConnection.class
new file mode 100644
index 0000000000000000000000000000000000000000..abe81e268b36d46b7b60c7a4c45bd084cffc623c
GIT binary patch
literal 1038
zc$}4zOK;Oa6ot>^WyhpV$b&))t-~`Z5H}GLiy$6~+Eqjmfk-SJXGq;Tp2!}f_GiI@
zN+7|WABDJ+q)sBrf`#w+o|*gIGml@tzx@F41T6zO+|1$@wsq_nFj3WUTf-e4cMW84
zPse>74>Z&?)HUofWS+UcE1xqYYxO=usw0M+A>Va<{yG{Dc<|01c%&4&!m+)+9k?o=
ziz#{Jh77H)BgWRT{mBlZ@W_&Ocrp#G=6q<jtONUmcZBbAN4mmqGn6Agj3yHiNIpEA
z@W56&b&f**G4hs_wBw18ni>124xcD3)bNn<o`?d6AGpd%X_enlW^!0ZUc;jt9;3mq
z(+M~s{gFAer9H4iZaRyCMni*@!ycNnGVX4=q3H{0#!k&ME~^Ziif?(gKeFCNzI4Yt
zHpftTf630O$_=r%_D{JJO>N9}YKn^`<Z-)0d;PaXhQ0qiX@<hW>*3&-RECX(^eU1<
zHRZD#EiGo2cC>`(orRK*>A8rAK$Y%v#ue6^!1ZNM(h-l_7noI<L7S+|Q%6+mE+Hk!
zqjtTIDz4D`Wmu!foT8ELk79wc7f8?_u(o>+_63Pz@+(rGNl4%-#dRbprl}}H01ZXT
za<c-IP^OW3#;}*PTFn&|C{3X6$b2Yj=g@z~M1w{Zb+WXe6=T}9nD%sTEvsnR6<ae%
jo*;!KNH&IS&|Kngh;a#|OpwYYkn8iKx<TLOv}WrMy-er0

